syntax = "proto3";
package veranablockchain.cspermission;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "veranablockchain/cspermission/params.proto";
import "veranablockchain/cspermission/types.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/cspermission/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateCredentialSchemaPerm(MsgCreateCredentialSchemaPerm) returns (MsgCreateCredentialSchemaPermResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "veranablockchain/x/cspermission/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateCredentialSchemaPerm {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 schema_id = 2;
  uint32 csp_type = 3;
  string did = 4;
  string grantee = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Required fields should be marked as non-nullable
  google.protobuf.Timestamp effective_from = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // Optional fields should be nullable
  google.protobuf.Timestamp effective_until = 7 [(gogoproto.nullable) = true, (gogoproto.stdtime) = true];
  string country = 8 [(gogoproto.nullable) = true];
  uint64 validation_id = 9 [(gogoproto.nullable) = true];
  uint64 validation_fees = 10;
  uint64 issuance_fees = 11;
  uint64 verification_fees = 12;
}

message MsgCreateCredentialSchemaPermResponse {}
