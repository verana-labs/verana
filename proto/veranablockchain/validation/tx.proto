syntax = "proto3";
package veranablockchain.validation;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "veranablockchain/validation/params.proto";
import "veranablockchain/validation/types.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/validation/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateValidation(MsgCreateValidation) returns (MsgCreateValidationResponse);
  rpc RenewValidation(MsgRenewValidation) returns (MsgRenewValidationResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "veranablockchain/x/validation/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateValidation {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint32 validation_type = 2;
  uint64 validator_perm_id = 3;
  string country = 4;
}

message MsgCreateValidationResponse {
  uint64 validation_id = 1;
}

message MsgRenewValidation {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  uint64 validator_perm_id = 3;
}

message MsgRenewValidationResponse {
  uint64 validation_id = 1;
}