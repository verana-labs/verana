syntax = "proto3";
package veranablockchain.permission;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "veranablockchain/permission/params.proto";
import "veranablockchain/permission/types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/permission/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/perm/v1/params";
  }
  rpc ListPermissions(QueryListPermissionsRequest) returns (QueryListPermissionsResponse) {
    option (google.api.http).get = "/perm/v1/list";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message QueryListPermissionsRequest {
  google.protobuf.Timestamp modified_after = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  uint32 response_max_size = 2;  // Default 64, min 1, max 1024
}

message QueryListPermissionsResponse {
  repeated Permission permissions = 1 [(gogoproto.nullable) = false];
}