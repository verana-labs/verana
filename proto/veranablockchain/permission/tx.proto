syntax = "proto3";
package veranablockchain.permission;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "veranablockchain/permission/params.proto";
import "veranablockchain/permission/types.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/permission/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc StartPermissionVP(MsgStartPermissionVP) returns (MsgStartPermissionVPResponse);
  rpc RenewPermissionVP(MsgRenewPermissionVP) returns (MsgRenewPermissionVPResponse);
  rpc SetPermissionVPToValidated(MsgSetPermissionVPToValidated) returns (MsgSetPermissionVPToValidatedResponse);
  rpc RequestPermissionVPTermination(MsgRequestPermissionVPTermination) returns (MsgRequestPermissionVPTerminationResponse);
  rpc ConfirmPermissionVPTermination(MsgConfirmPermissionVPTermination) returns (MsgConfirmPermissionVPTerminationResponse);
  rpc CancelPermissionVPLastRequest(MsgCancelPermissionVPLastRequest) returns (MsgCancelPermissionVPLastRequestResponse);
  rpc CreateRootPermission(MsgCreateRootPermission) returns (MsgCreateRootPermissionResponse);
  rpc ExtendPermission(MsgExtendPermission) returns (MsgExtendPermissionResponse);
  rpc RevokePermission(MsgRevokePermission) returns (MsgRevokePermissionResponse);
  rpc CreateOrUpdatePermissionSession(MsgCreateOrUpdatePermissionSession) returns (MsgCreateOrUpdatePermissionSessionResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "veranablockchain/x/permission/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgStartPermissionVP represents a message to start a permission validation process
message MsgStartPermissionVP {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint32 type = 2;
  uint64 validator_perm_id = 3;
  string country = 4;
  string did = 5 [(gogoproto.nullable) = true]; // optional
}

// MsgStartPermissionVPResponse defines the Msg/StartPermissionVP response type
message MsgStartPermissionVPResponse {
  uint64 permission_id = 1;
}

// MsgRenewPermissionVP represents a message to renew a permission validation process
message MsgRenewPermissionVP {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // ID of the permission to renew
}

// MsgRenewPermissionVPResponse defines the Msg/RenewPermissionVP response type
message MsgRenewPermissionVPResponse {}

// MsgSetPermissionVPToValidated represents a message to set a permission validation process to validated state
message MsgSetPermissionVPToValidated {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;
  google.protobuf.Timestamp effective_until = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  uint64 validation_fees = 4;
  uint64 issuance_fees = 5;
  uint64 verification_fees = 6;
  string country = 7;
  string vp_summary_digest_sri = 8;
}

// MsgSetPermissionVPToValidatedResponse defines the Msg/SetPermissionVPToValidated response type
message MsgSetPermissionVPToValidatedResponse {}

// MsgRequestPermissionVPTermination represents a message to request termination of a permission validation process
message MsgRequestPermissionVPTermination {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // id of the validation process
}

// MsgRequestPermissionVPTerminationResponse defines the Msg/RequestPermissionVPTermination response type
message MsgRequestPermissionVPTerminationResponse {}


message MsgConfirmPermissionVPTermination {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // Permission ID
}

message MsgConfirmPermissionVPTerminationResponse {}

message MsgCancelPermissionVPLastRequest {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // Permission ID
}

message MsgCancelPermissionVPLastRequestResponse {}

message MsgCreateRootPermission {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 schema_id = 2;
  string did = 3;
  string country = 4;
  google.protobuf.Timestamp effective_from = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp effective_until = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  uint64 validation_fees = 7;
  uint64 issuance_fees = 8;
  uint64 verification_fees = 9;
}

message MsgCreateRootPermissionResponse {
  uint64 id = 1;  // ID of the created permission
}

message MsgExtendPermission {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // Permission ID
  google.protobuf.Timestamp effective_until = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
}

message MsgExtendPermissionResponse {}

message MsgRevokePermission {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 id = 2;  // Permission ID
}

message MsgRevokePermissionResponse {}

message MsgCreateOrUpdatePermissionSession {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string id = 2; // UUID
  uint64 executor_perm_id = 3;
  uint64 beneficiary_perm_id = 4;
  uint64 agent_perm_id = 5;
  uint64 wallet_agent_perm_id = 6 [(gogoproto.nullable) = true];
}

message MsgCreateOrUpdatePermissionSessionResponse {
  string id = 1;
}