syntax = "proto3";
package veranablockchain.diddirectory;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "veranablockchain/diddirectory/params.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "veranablockchain/diddirectory/types.proto";

option go_package = "github.com/verana-labs/verana-blockchain/x/diddirectory/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/vpr/v1/dd/params";
  }
  rpc ListDIDs(QueryListDIDsRequest) returns (QueryListDIDsResponse) {
    option (google.api.http).get = "/vpr/v1/dd/list";
  }
  rpc GetDID(QueryGetDIDRequest) returns (QueryGetDIDResponse) {
    option (google.api.http).get = "/vpr/v1/did/get/{did}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message QueryListDIDsRequest {
  string account = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  google.protobuf.Timestamp changed = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  bool expired = 3;
  bool over_grace = 4;
  uint32 response_max_size = 5;
}

message QueryListDIDsResponse {
  repeated DIDDirectory dids = 1 [(gogoproto.nullable) = false];
}

message QueryGetDIDRequest {
  string did = 1;
}

message QueryGetDIDResponse {
  DIDDirectory did_entry = 1 [(gogoproto.nullable) = false];
}