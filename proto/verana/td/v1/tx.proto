syntax = "proto3";
package verana.td.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "verana/td/v1/params.proto";

option go_package = "github.com/verana-labs/verana/x/td/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc ReclaimTrustDepositYield(MsgReclaimTrustDepositYield) returns (MsgReclaimTrustDepositYieldResponse);
  rpc ReclaimTrustDeposit(MsgReclaimTrustDeposit) returns (MsgReclaimTrustDepositResponse);
  // SlashTrustDeposit defines a governance operation to slash an account's trust deposit
  rpc SlashTrustDeposit(MsgSlashTrustDeposit) returns (MsgSlashTrustDepositResponse);
  rpc RepaySlashedTrustDeposit(MsgRepaySlashedTrustDeposit) returns (MsgRepaySlashedTrustDepositResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "verana/x/td/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgReclaimTrustDepositYield defines the request type
message MsgReclaimTrustDepositYield {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgReclaimTrustDepositYieldResponse defines the response type
message MsgReclaimTrustDepositYieldResponse {
  uint64 claimed_amount = 1;
}

message MsgReclaimTrustDeposit {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 claimed = 2;  // Amount to reclaim in denom
}

message MsgReclaimTrustDepositResponse {
  uint64 burned_amount = 1;     // Amount burned
  uint64 claimed_amount = 2;    // Amount transferred to account
}

// MsgSlashTrustDeposit defines the message for slashing an account's trust deposit
// This can only be executed by the governance module
message MsgSlashTrustDeposit {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "verana/x/td/MsgSlashTrustDeposit";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // account is the address of the account whose trust deposit will be slashed
  string account = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // amount is the amount to slash (in base denom)
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgSlashTrustDepositResponse defines the response for MsgSlashTrustDeposit
message MsgSlashTrustDepositResponse {}

message MsgRepaySlashedTrustDeposit {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string account = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 amount = 3;
}

message MsgRepaySlashedTrustDepositResponse {}
