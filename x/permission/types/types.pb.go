// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: veranablockchain/permission/types.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Permission types
type PermissionType int32

const (
	PermissionType_PERMISSION_TYPE_UNSPECIFIED      PermissionType = 0
	PermissionType_PERMISSION_TYPE_ISSUER           PermissionType = 1
	PermissionType_PERMISSION_TYPE_VERIFIER         PermissionType = 2
	PermissionType_PERMISSION_TYPE_ISSUER_GRANTOR   PermissionType = 3
	PermissionType_PERMISSION_TYPE_VERIFIER_GRANTOR PermissionType = 4
	PermissionType_PERMISSION_TYPE_TRUST_REGISTRY   PermissionType = 5
	PermissionType_PERMISSION_TYPE_HOLDER           PermissionType = 6
)

var PermissionType_name = map[int32]string{
	0: "PERMISSION_TYPE_UNSPECIFIED",
	1: "PERMISSION_TYPE_ISSUER",
	2: "PERMISSION_TYPE_VERIFIER",
	3: "PERMISSION_TYPE_ISSUER_GRANTOR",
	4: "PERMISSION_TYPE_VERIFIER_GRANTOR",
	5: "PERMISSION_TYPE_TRUST_REGISTRY",
	6: "PERMISSION_TYPE_HOLDER",
}

var PermissionType_value = map[string]int32{
	"PERMISSION_TYPE_UNSPECIFIED":      0,
	"PERMISSION_TYPE_ISSUER":           1,
	"PERMISSION_TYPE_VERIFIER":         2,
	"PERMISSION_TYPE_ISSUER_GRANTOR":   3,
	"PERMISSION_TYPE_VERIFIER_GRANTOR": 4,
	"PERMISSION_TYPE_TRUST_REGISTRY":   5,
	"PERMISSION_TYPE_HOLDER":           6,
}

func (x PermissionType) String() string {
	return proto.EnumName(PermissionType_name, int32(x))
}

func (PermissionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53bb65abd815b63f, []int{0}
}

// Validation process states
type ValidationState int32

const (
	ValidationState_VALIDATION_STATE_UNSPECIFIED           ValidationState = 0
	ValidationState_VALIDATION_STATE_PENDING               ValidationState = 1
	ValidationState_VALIDATION_STATE_VALIDATED             ValidationState = 2
	ValidationState_VALIDATION_STATE_TERMINATED            ValidationState = 3
	ValidationState_VALIDATION_STATE_TERMINATION_REQUESTED ValidationState = 4
)

var ValidationState_name = map[int32]string{
	0: "VALIDATION_STATE_UNSPECIFIED",
	1: "VALIDATION_STATE_PENDING",
	2: "VALIDATION_STATE_VALIDATED",
	3: "VALIDATION_STATE_TERMINATED",
	4: "VALIDATION_STATE_TERMINATION_REQUESTED",
}

var ValidationState_value = map[string]int32{
	"VALIDATION_STATE_UNSPECIFIED":           0,
	"VALIDATION_STATE_PENDING":               1,
	"VALIDATION_STATE_VALIDATED":             2,
	"VALIDATION_STATE_TERMINATED":            3,
	"VALIDATION_STATE_TERMINATION_REQUESTED": 4,
}

func (x ValidationState) String() string {
	return proto.EnumName(ValidationState_name, int32(x))
}

func (ValidationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_53bb65abd815b63f, []int{1}
}

type Permission struct {
	Id                 uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SchemaId           uint64          `protobuf:"varint,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Type               PermissionType  `protobuf:"varint,3,opt,name=type,proto3,enum=veranablockchain.permission.PermissionType" json:"type,omitempty"`
	Did                string          `protobuf:"bytes,4,opt,name=did,proto3" json:"did,omitempty"`
	Grantee            string          `protobuf:"bytes,5,opt,name=grantee,proto3" json:"grantee,omitempty"`
	Created            *time.Time      `protobuf:"bytes,6,opt,name=created,proto3,stdtime" json:"created,omitempty"`
	CreatedBy          string          `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Extended           *time.Time      `protobuf:"bytes,8,opt,name=extended,proto3,stdtime" json:"extended,omitempty"`
	ExtendedBy         string          `protobuf:"bytes,9,opt,name=extended_by,json=extendedBy,proto3" json:"extended_by,omitempty"`
	EffectiveFrom      *time.Time      `protobuf:"bytes,10,opt,name=effective_from,json=effectiveFrom,proto3,stdtime" json:"effective_from,omitempty"`
	EffectiveUntil     *time.Time      `protobuf:"bytes,11,opt,name=effective_until,json=effectiveUntil,proto3,stdtime" json:"effective_until,omitempty"`
	Modified           *time.Time      `protobuf:"bytes,12,opt,name=modified,proto3,stdtime" json:"modified,omitempty"`
	ValidationFees     uint64          `protobuf:"varint,13,opt,name=validation_fees,json=validationFees,proto3" json:"validation_fees,omitempty"`
	IssuanceFees       uint64          `protobuf:"varint,14,opt,name=issuance_fees,json=issuanceFees,proto3" json:"issuance_fees,omitempty"`
	VerificationFees   uint64          `protobuf:"varint,15,opt,name=verification_fees,json=verificationFees,proto3" json:"verification_fees,omitempty"`
	Deposit            uint64          `protobuf:"varint,16,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Revoked            *time.Time      `protobuf:"bytes,17,opt,name=revoked,proto3,stdtime" json:"revoked,omitempty"`
	RevokedBy          string          `protobuf:"bytes,18,opt,name=revoked_by,json=revokedBy,proto3" json:"revoked_by,omitempty"`
	Terminated         *time.Time      `protobuf:"bytes,19,opt,name=terminated,proto3,stdtime" json:"terminated,omitempty"`
	TerminatedBy       string          `protobuf:"bytes,20,opt,name=terminated_by,json=terminatedBy,proto3" json:"terminated_by,omitempty"`
	Country            string          `protobuf:"bytes,21,opt,name=country,proto3" json:"country,omitempty"`
	ValidatorPermId    uint64          `protobuf:"varint,22,opt,name=validator_perm_id,json=validatorPermId,proto3" json:"validator_perm_id,omitempty"`
	VpState            ValidationState `protobuf:"varint,23,opt,name=vp_state,json=vpState,proto3,enum=veranablockchain.permission.ValidationState" json:"vp_state,omitempty"`
	VpExp              *time.Time      `protobuf:"bytes,24,opt,name=vp_exp,json=vpExp,proto3,stdtime" json:"vp_exp,omitempty"`
	VpLastStateChange  *time.Time      `protobuf:"bytes,25,opt,name=vp_last_state_change,json=vpLastStateChange,proto3,stdtime" json:"vp_last_state_change,omitempty"`
	VpValidatorDeposit uint64          `protobuf:"varint,26,opt,name=vp_validator_deposit,json=vpValidatorDeposit,proto3" json:"vp_validator_deposit,omitempty"`
	VpCurrentFees      uint64          `protobuf:"varint,27,opt,name=vp_current_fees,json=vpCurrentFees,proto3" json:"vp_current_fees,omitempty"`
	VpCurrentDeposit   uint64          `protobuf:"varint,28,opt,name=vp_current_deposit,json=vpCurrentDeposit,proto3" json:"vp_current_deposit,omitempty"`
	VpSummaryDigestSri string          `protobuf:"bytes,29,opt,name=vp_summary_digest_sri,json=vpSummaryDigestSri,proto3" json:"vp_summary_digest_sri,omitempty"`
	VpTermRequested    *time.Time      `protobuf:"bytes,30,opt,name=vp_term_requested,json=vpTermRequested,proto3,stdtime" json:"vp_term_requested,omitempty"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_53bb65abd815b63f, []int{0}
}
func (m *Permission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return m.Size()
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Permission) GetSchemaId() uint64 {
	if m != nil {
		return m.SchemaId
	}
	return 0
}

func (m *Permission) GetType() PermissionType {
	if m != nil {
		return m.Type
	}
	return PermissionType_PERMISSION_TYPE_UNSPECIFIED
}

func (m *Permission) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *Permission) GetGrantee() string {
	if m != nil {
		return m.Grantee
	}
	return ""
}

func (m *Permission) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Permission) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Permission) GetExtended() *time.Time {
	if m != nil {
		return m.Extended
	}
	return nil
}

func (m *Permission) GetExtendedBy() string {
	if m != nil {
		return m.ExtendedBy
	}
	return ""
}

func (m *Permission) GetEffectiveFrom() *time.Time {
	if m != nil {
		return m.EffectiveFrom
	}
	return nil
}

func (m *Permission) GetEffectiveUntil() *time.Time {
	if m != nil {
		return m.EffectiveUntil
	}
	return nil
}

func (m *Permission) GetModified() *time.Time {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *Permission) GetValidationFees() uint64 {
	if m != nil {
		return m.ValidationFees
	}
	return 0
}

func (m *Permission) GetIssuanceFees() uint64 {
	if m != nil {
		return m.IssuanceFees
	}
	return 0
}

func (m *Permission) GetVerificationFees() uint64 {
	if m != nil {
		return m.VerificationFees
	}
	return 0
}

func (m *Permission) GetDeposit() uint64 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

func (m *Permission) GetRevoked() *time.Time {
	if m != nil {
		return m.Revoked
	}
	return nil
}

func (m *Permission) GetRevokedBy() string {
	if m != nil {
		return m.RevokedBy
	}
	return ""
}

func (m *Permission) GetTerminated() *time.Time {
	if m != nil {
		return m.Terminated
	}
	return nil
}

func (m *Permission) GetTerminatedBy() string {
	if m != nil {
		return m.TerminatedBy
	}
	return ""
}

func (m *Permission) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Permission) GetValidatorPermId() uint64 {
	if m != nil {
		return m.ValidatorPermId
	}
	return 0
}

func (m *Permission) GetVpState() ValidationState {
	if m != nil {
		return m.VpState
	}
	return ValidationState_VALIDATION_STATE_UNSPECIFIED
}

func (m *Permission) GetVpExp() *time.Time {
	if m != nil {
		return m.VpExp
	}
	return nil
}

func (m *Permission) GetVpLastStateChange() *time.Time {
	if m != nil {
		return m.VpLastStateChange
	}
	return nil
}

func (m *Permission) GetVpValidatorDeposit() uint64 {
	if m != nil {
		return m.VpValidatorDeposit
	}
	return 0
}

func (m *Permission) GetVpCurrentFees() uint64 {
	if m != nil {
		return m.VpCurrentFees
	}
	return 0
}

func (m *Permission) GetVpCurrentDeposit() uint64 {
	if m != nil {
		return m.VpCurrentDeposit
	}
	return 0
}

func (m *Permission) GetVpSummaryDigestSri() string {
	if m != nil {
		return m.VpSummaryDigestSri
	}
	return ""
}

func (m *Permission) GetVpTermRequested() *time.Time {
	if m != nil {
		return m.VpTermRequested
	}
	return nil
}

func init() {
	proto.RegisterEnum("veranablockchain.permission.PermissionType", PermissionType_name, PermissionType_value)
	proto.RegisterEnum("veranablockchain.permission.ValidationState", ValidationState_name, ValidationState_value)
	proto.RegisterType((*Permission)(nil), "veranablockchain.permission.Permission")
}

func init() {
	proto.RegisterFile("veranablockchain/permission/types.proto", fileDescriptor_53bb65abd815b63f)
}

var fileDescriptor_53bb65abd815b63f = []byte{
	// 1003 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x36, 0x6d, 0xf9, 0x6f, 0x6c, 0x4b, 0xd4, 0xd6, 0x49, 0x37, 0xb2, 0x2b, 0x0b, 0x69, 0x91,
	0x18, 0x4e, 0x22, 0xb5, 0xee, 0x21, 0xe8, 0x1f, 0x5a, 0xcb, 0xa2, 0x5d, 0x02, 0xae, 0xec, 0x90,
	0x94, 0x81, 0xf4, 0x42, 0x50, 0xe4, 0x4a, 0x5e, 0x44, 0xfc, 0xe9, 0x72, 0x45, 0x58, 0x6f, 0x91,
	0x37, 0xe9, 0xa5, 0xe7, 0x9e, 0x7b, 0x0c, 0x7a, 0xea, 0xad, 0x85, 0xfd, 0x0c, 0xbd, 0x17, 0xbb,
	0x24, 0x25, 0x57, 0x76, 0x62, 0x5d, 0x88, 0xd9, 0x99, 0xef, 0x9b, 0xd9, 0x99, 0xfd, 0x76, 0x41,
	0x78, 0x9a, 0x10, 0xe6, 0x04, 0x4e, 0x77, 0x10, 0xba, 0x6f, 0xdc, 0x0b, 0x87, 0x06, 0x8d, 0x88,
	0x30, 0x9f, 0xc6, 0x31, 0x0d, 0x83, 0x06, 0x1f, 0x45, 0x24, 0xae, 0x47, 0x2c, 0xe4, 0x21, 0xda,
	0x9a, 0x06, 0xd6, 0x27, 0xc0, 0x4a, 0xd9, 0xf1, 0x69, 0x10, 0x36, 0xe4, 0x37, 0xc5, 0x57, 0x1e,
	0xb9, 0x61, 0xec, 0x87, 0xb1, 0x2d, 0x57, 0x8d, 0x74, 0x91, 0x85, 0x36, 0xfb, 0x61, 0x3f, 0x4c,
	0xfd, 0xc2, 0xca, 0xbc, 0x3b, 0xfd, 0x30, 0xec, 0x0f, 0x48, 0x43, 0xae, 0xba, 0xc3, 0x5e, 0x83,
	0x53, 0x9f, 0xc4, 0xdc, 0xf1, 0xa3, 0x14, 0xf0, 0xf8, 0xd7, 0x75, 0x80, 0xb3, 0x71, 0x4d, 0x54,
	0x84, 0x79, 0xea, 0x61, 0xa5, 0xa6, 0xec, 0x16, 0x8c, 0x79, 0xea, 0xa1, 0x2d, 0x58, 0x8d, 0xdd,
	0x0b, 0xe2, 0x3b, 0x36, 0xf5, 0xf0, 0xbc, 0x74, 0xaf, 0xa4, 0x0e, 0xdd, 0x43, 0xdf, 0x43, 0x41,
	0x34, 0x83, 0x17, 0x6a, 0xca, 0x6e, 0x71, 0xff, 0x59, 0xfd, 0x03, 0xcd, 0xd4, 0x27, 0x35, 0xac,
	0x51, 0x44, 0x0c, 0x49, 0x44, 0x2a, 0x2c, 0x78, 0xd4, 0xc3, 0x85, 0x9a, 0xb2, 0xbb, 0x6a, 0x08,
	0x13, 0xed, 0xc3, 0x72, 0x9f, 0x39, 0x01, 0x27, 0x04, 0x2f, 0x0a, 0x6f, 0x13, 0xff, 0xf9, 0xdb,
	0x8b, 0xcd, 0xac, 0xd1, 0x03, 0xcf, 0x63, 0x24, 0x8e, 0x4d, 0xce, 0x68, 0xd0, 0x37, 0x72, 0x20,
	0xfa, 0x1a, 0x96, 0x5d, 0x46, 0x1c, 0x4e, 0x3c, 0xbc, 0x54, 0x53, 0x76, 0xd7, 0xf6, 0x2b, 0xf5,
	0xb4, 0xeb, 0x7a, 0xde, 0x75, 0xdd, 0xca, 0xbb, 0x6e, 0x16, 0xde, 0xfe, 0xbd, 0xa3, 0x18, 0x39,
	0x01, 0xbd, 0x04, 0xc8, 0x4c, 0xbb, 0x3b, 0xc2, 0xcb, 0xf7, 0x94, 0x5c, 0xcd, 0xb0, 0xcd, 0x11,
	0xfa, 0x16, 0x56, 0xc8, 0x25, 0x27, 0x81, 0x47, 0x3c, 0xbc, 0x32, 0x63, 0xd5, 0x31, 0x03, 0x7d,
	0x05, 0x6b, 0xb9, 0x2d, 0xea, 0xae, 0xde, 0x53, 0x17, 0x72, 0x70, 0x73, 0x84, 0x8e, 0xa1, 0x48,
	0x7a, 0x3d, 0xe2, 0x72, 0x9a, 0x10, 0xbb, 0xc7, 0x42, 0x1f, 0xc3, 0x8c, 0xe5, 0x37, 0xc6, 0xbc,
	0x23, 0x16, 0xfa, 0x48, 0x87, 0xd2, 0x24, 0xd1, 0x30, 0xe0, 0x74, 0x80, 0xd7, 0x66, 0xcc, 0x34,
	0xd9, 0x41, 0x47, 0xf0, 0xc4, 0x30, 0xfc, 0xd0, 0xa3, 0x3d, 0x4a, 0x3c, 0xbc, 0x3e, 0xeb, 0x30,
	0x72, 0x06, 0x7a, 0x0a, 0xa5, 0xc4, 0x19, 0x50, 0xcf, 0xe1, 0x34, 0x0c, 0xec, 0x1e, 0x21, 0x31,
	0xde, 0x90, 0x4a, 0x2b, 0x4e, 0xdc, 0x47, 0x84, 0xc4, 0xe8, 0x53, 0xd8, 0xa0, 0x71, 0x3c, 0x74,
	0x02, 0x97, 0xa4, 0xb0, 0xa2, 0x84, 0xad, 0xe7, 0x4e, 0x09, 0x7a, 0x06, 0xe5, 0x84, 0x30, 0xda,
	0xa3, 0xee, 0x8d, 0x7c, 0x25, 0x09, 0x54, 0x6f, 0x06, 0x24, 0x18, 0xc3, 0xb2, 0x47, 0xa2, 0x30,
	0xa6, 0x1c, 0xab, 0x12, 0x92, 0x2f, 0x85, 0xa8, 0x18, 0x49, 0xc2, 0x37, 0xc4, 0xc3, 0xe5, 0x59,
	0x45, 0x95, 0x11, 0x84, 0xa8, 0x32, 0x53, 0x1c, 0x2e, 0xba, 0x4f, 0x54, 0x19, 0xb6, 0x39, 0x42,
	0x3f, 0x00, 0x70, 0x71, 0x4f, 0x02, 0x29, 0xe6, 0x8f, 0x66, 0xac, 0x7b, 0x83, 0x83, 0xbe, 0x83,
	0x8d, 0xc9, 0x4a, 0x54, 0xdf, 0xbc, 0xa7, 0xfa, 0xfa, 0x04, 0xde, 0x1c, 0x89, 0x79, 0xb8, 0xe1,
	0x30, 0xe0, 0x6c, 0x84, 0x1f, 0xc8, 0x4b, 0x99, 0x2f, 0xd1, 0x1e, 0x94, 0xb3, 0xd3, 0x08, 0x99,
	0x2d, 0xee, 0xb5, 0x78, 0x10, 0x1e, 0xca, 0x99, 0x95, 0xc6, 0x01, 0x71, 0xc9, 0x75, 0x0f, 0x1d,
	0xc3, 0x4a, 0x12, 0xd9, 0x31, 0x77, 0x38, 0xc1, 0x1f, 0xcb, 0xb7, 0xe1, 0xf9, 0x07, 0xdf, 0x86,
	0xf3, 0xf1, 0x31, 0x9b, 0x82, 0x63, 0x2c, 0x27, 0x91, 0x34, 0xd0, 0x4b, 0x58, 0x4a, 0x22, 0x9b,
	0x5c, 0x46, 0x18, 0xcf, 0x38, 0x8b, 0xc5, 0x24, 0xd2, 0x2e, 0x23, 0xf4, 0x0a, 0x36, 0x93, 0xc8,
	0x1e, 0x38, 0x31, 0x4f, 0xb7, 0x61, 0xbb, 0x17, 0x4e, 0xd0, 0x27, 0xf8, 0xd1, 0x8c, 0x69, 0xca,
	0x49, 0x74, 0xe2, 0xc4, 0x5c, 0xee, 0xe2, 0x50, 0x52, 0xd1, 0xe7, 0x32, 0xe5, 0x64, 0x06, 0xb9,
	0x6e, 0x2a, 0x72, 0x06, 0x28, 0x89, 0xce, 0xf3, 0x50, 0x2b, 0x93, 0xd0, 0x13, 0x28, 0x25, 0x91,
	0xed, 0x0e, 0x19, 0x23, 0x01, 0x4f, 0x75, 0xb8, 0x25, 0xc1, 0x1b, 0x49, 0x74, 0x98, 0x7a, 0xa5,
	0x08, 0x9f, 0x03, 0xba, 0x81, 0xcb, 0xf3, 0x6e, 0x67, 0x92, 0xcd, 0xa1, 0x79, 0xd6, 0x2f, 0xe0,
	0x81, 0x18, 0xee, 0xd0, 0xf7, 0x1d, 0x36, 0xb2, 0x3d, 0xda, 0x27, 0xa2, 0x49, 0x46, 0xf1, 0x27,
	0xf2, 0xc0, 0x50, 0x12, 0x99, 0x69, 0xac, 0x25, 0x43, 0x26, 0xa3, 0xe8, 0x04, 0xca, 0x49, 0x64,
	0x8b, 0x83, 0xb6, 0x19, 0xf9, 0x65, 0x48, 0x62, 0xa1, 0xae, 0xea, 0x8c, 0xa3, 0x28, 0x25, 0x91,
	0x45, 0x98, 0x6f, 0xe4, 0xc4, 0xbd, 0x7f, 0x15, 0x28, 0xfe, 0xff, 0x35, 0x47, 0x3b, 0xb0, 0x75,
	0xa6, 0x19, 0x3f, 0xe9, 0xa6, 0xa9, 0x9f, 0xb6, 0x6d, 0xeb, 0xf5, 0x99, 0x66, 0x77, 0xda, 0xe6,
	0x99, 0x76, 0xa8, 0x1f, 0xe9, 0x5a, 0x4b, 0x9d, 0x43, 0x15, 0x78, 0x38, 0x0d, 0xd0, 0x4d, 0xb3,
	0xa3, 0x19, 0xaa, 0x82, 0xb6, 0x01, 0x4f, 0xc7, 0xce, 0x35, 0x43, 0x30, 0x0d, 0x75, 0x1e, 0x3d,
	0x86, 0xea, 0xdd, 0x4c, 0xfb, 0xd8, 0x38, 0x68, 0x5b, 0xa7, 0x86, 0xba, 0x80, 0x3e, 0x83, 0xda,
	0xfb, 0x32, 0x8c, 0x51, 0x85, 0xbb, 0x32, 0x59, 0x46, 0xc7, 0xb4, 0x6c, 0x43, 0x3b, 0xd6, 0x4d,
	0xcb, 0x78, 0xad, 0x2e, 0xde, 0xb5, 0xcf, 0x1f, 0x4f, 0x4f, 0x5a, 0x9a, 0xa1, 0x2e, 0xed, 0xfd,
	0xae, 0x40, 0x69, 0x4a, 0xa9, 0xa8, 0x06, 0xdb, 0xe7, 0x07, 0x27, 0x7a, 0xeb, 0xc0, 0x12, 0x78,
	0xd3, 0x3a, 0xb0, 0xa6, 0x3b, 0xdf, 0x06, 0x7c, 0x0b, 0x71, 0xa6, 0xb5, 0x5b, 0x7a, 0xfb, 0x58,
	0x55, 0x50, 0x15, 0x2a, 0xb7, 0xa2, 0x99, 0x43, 0x6b, 0xa9, 0xf3, 0x62, 0xb0, 0xb7, 0xe2, 0x96,
	0xd8, 0x60, 0x5b, 0x02, 0x16, 0xd0, 0x1e, 0x3c, 0x79, 0x2f, 0x40, 0x78, 0x0c, 0xed, 0x55, 0x47,
	0x33, 0x05, 0xb6, 0xd0, 0xec, 0xfc, 0x71, 0x55, 0x55, 0xde, 0x5d, 0x55, 0x95, 0x7f, 0xae, 0xaa,
	0xca, 0xdb, 0xeb, 0xea, 0xdc, 0xbb, 0xeb, 0xea, 0xdc, 0x5f, 0xd7, 0xd5, 0xb9, 0x9f, 0xbf, 0xe9,
	0x53, 0x7e, 0x31, 0xec, 0xd6, 0xdd, 0xd0, 0x6f, 0xa4, 0x17, 0xf5, 0xc5, 0xc0, 0xe9, 0xc6, 0xb9,
	0x7d, 0xe3, 0x3f, 0xe6, 0xf2, 0xd6, 0x9f, 0x4c, 0x77, 0x49, 0x4a, 0xe7, 0xcb, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xa9, 0x5d, 0x78, 0x73, 0xf5, 0x08, 0x00, 0x00,
}

func (m *Permission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Permission) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Permission) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.VpTermRequested != nil {
		n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.VpTermRequested, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpTermRequested):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintTypes(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.VpSummaryDigestSri) > 0 {
		i -= len(m.VpSummaryDigestSri)
		copy(dAtA[i:], m.VpSummaryDigestSri)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.VpSummaryDigestSri)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if m.VpCurrentDeposit != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.VpCurrentDeposit))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if m.VpCurrentFees != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.VpCurrentFees))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if m.VpValidatorDeposit != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.VpValidatorDeposit))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.VpLastStateChange != nil {
		n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.VpLastStateChange, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpLastStateChange):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintTypes(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if m.VpExp != nil {
		n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.VpExp, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpExp):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintTypes(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.VpState != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.VpState))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if m.ValidatorPermId != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.ValidatorPermId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.TerminatedBy) > 0 {
		i -= len(m.TerminatedBy)
		copy(dAtA[i:], m.TerminatedBy)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.TerminatedBy)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.Terminated != nil {
		n4, err4 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Terminated, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Terminated):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintTypes(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.RevokedBy) > 0 {
		i -= len(m.RevokedBy)
		copy(dAtA[i:], m.RevokedBy)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.RevokedBy)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.Revoked != nil {
		n5, err5 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Revoked, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Revoked):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintTypes(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.Deposit != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Deposit))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.VerificationFees != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.VerificationFees))
		i--
		dAtA[i] = 0x78
	}
	if m.IssuanceFees != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.IssuanceFees))
		i--
		dAtA[i] = 0x70
	}
	if m.ValidationFees != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.ValidationFees))
		i--
		dAtA[i] = 0x68
	}
	if m.Modified != nil {
		n6, err6 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Modified, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Modified):])
		if err6 != nil {
			return 0, err6
		}
		i -= n6
		i = encodeVarintTypes(dAtA, i, uint64(n6))
		i--
		dAtA[i] = 0x62
	}
	if m.EffectiveUntil != nil {
		n7, err7 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.EffectiveUntil, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EffectiveUntil):])
		if err7 != nil {
			return 0, err7
		}
		i -= n7
		i = encodeVarintTypes(dAtA, i, uint64(n7))
		i--
		dAtA[i] = 0x5a
	}
	if m.EffectiveFrom != nil {
		n8, err8 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.EffectiveFrom, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EffectiveFrom):])
		if err8 != nil {
			return 0, err8
		}
		i -= n8
		i = encodeVarintTypes(dAtA, i, uint64(n8))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ExtendedBy) > 0 {
		i -= len(m.ExtendedBy)
		copy(dAtA[i:], m.ExtendedBy)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ExtendedBy)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Extended != nil {
		n9, err9 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Extended, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Extended):])
		if err9 != nil {
			return 0, err9
		}
		i -= n9
		i = encodeVarintTypes(dAtA, i, uint64(n9))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Created != nil {
		n10, err10 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Created):])
		if err10 != nil {
			return 0, err10
		}
		i -= n10
		i = encodeVarintTypes(dAtA, i, uint64(n10))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Grantee) > 0 {
		i -= len(m.Grantee)
		copy(dAtA[i:], m.Grantee)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Grantee)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x22
	}
	if m.Type != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if m.SchemaId != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.SchemaId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Permission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTypes(uint64(m.Id))
	}
	if m.SchemaId != 0 {
		n += 1 + sovTypes(uint64(m.SchemaId))
	}
	if m.Type != 0 {
		n += 1 + sovTypes(uint64(m.Type))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Grantee)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Created != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Created)
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Extended != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Extended)
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.ExtendedBy)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.EffectiveFrom != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EffectiveFrom)
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.EffectiveUntil != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.EffectiveUntil)
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Modified != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Modified)
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.ValidationFees != 0 {
		n += 1 + sovTypes(uint64(m.ValidationFees))
	}
	if m.IssuanceFees != 0 {
		n += 1 + sovTypes(uint64(m.IssuanceFees))
	}
	if m.VerificationFees != 0 {
		n += 1 + sovTypes(uint64(m.VerificationFees))
	}
	if m.Deposit != 0 {
		n += 2 + sovTypes(uint64(m.Deposit))
	}
	if m.Revoked != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Revoked)
		n += 2 + l + sovTypes(uint64(l))
	}
	l = len(m.RevokedBy)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.Terminated != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.Terminated)
		n += 2 + l + sovTypes(uint64(l))
	}
	l = len(m.TerminatedBy)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.ValidatorPermId != 0 {
		n += 2 + sovTypes(uint64(m.ValidatorPermId))
	}
	if m.VpState != 0 {
		n += 2 + sovTypes(uint64(m.VpState))
	}
	if m.VpExp != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpExp)
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.VpLastStateChange != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpLastStateChange)
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.VpValidatorDeposit != 0 {
		n += 2 + sovTypes(uint64(m.VpValidatorDeposit))
	}
	if m.VpCurrentFees != 0 {
		n += 2 + sovTypes(uint64(m.VpCurrentFees))
	}
	if m.VpCurrentDeposit != 0 {
		n += 2 + sovTypes(uint64(m.VpCurrentDeposit))
	}
	l = len(m.VpSummaryDigestSri)
	if l > 0 {
		n += 2 + l + sovTypes(uint64(l))
	}
	if m.VpTermRequested != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.VpTermRequested)
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Permission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Permission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Permission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaId", wireType)
			}
			m.SchemaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchemaId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= PermissionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Grantee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extended", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Extended == nil {
				m.Extended = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Extended, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtendedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveFrom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EffectiveFrom == nil {
				m.EffectiveFrom = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.EffectiveFrom, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveUntil", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EffectiveUntil == nil {
				m.EffectiveUntil = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.EffectiveUntil, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Modified == nil {
				m.Modified = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Modified, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidationFees", wireType)
			}
			m.ValidationFees = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidationFees |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IssuanceFees", wireType)
			}
			m.IssuanceFees = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IssuanceFees |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationFees", wireType)
			}
			m.VerificationFees = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VerificationFees |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			m.Deposit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Deposit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoked", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revoked == nil {
				m.Revoked = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Revoked, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RevokedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RevokedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Terminated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Terminated == nil {
				m.Terminated = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.Terminated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TerminatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorPermId", wireType)
			}
			m.ValidatorPermId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidatorPermId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpState", wireType)
			}
			m.VpState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VpState |= ValidationState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpExp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VpExp == nil {
				m.VpExp = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.VpExp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpLastStateChange", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VpLastStateChange == nil {
				m.VpLastStateChange = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.VpLastStateChange, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpValidatorDeposit", wireType)
			}
			m.VpValidatorDeposit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VpValidatorDeposit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpCurrentFees", wireType)
			}
			m.VpCurrentFees = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VpCurrentFees |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpCurrentDeposit", wireType)
			}
			m.VpCurrentDeposit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VpCurrentDeposit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpSummaryDigestSri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VpSummaryDigestSri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpTermRequested", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VpTermRequested == nil {
				m.VpTermRequested = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.VpTermRequested, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
