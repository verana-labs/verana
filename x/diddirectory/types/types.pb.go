// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: veranablockchain/diddirectory/types.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Core DIDDirectory type
type DIDDirectory struct {
	Did        string    `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Controller string    `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	Created    time.Time `protobuf:"bytes,3,opt,name=created,proto3,stdtime" json:"created"`
	Modified   time.Time `protobuf:"bytes,4,opt,name=modified,proto3,stdtime" json:"modified"`
	Exp        time.Time `protobuf:"bytes,5,opt,name=exp,proto3,stdtime" json:"exp"`
	Deposit    int64     `protobuf:"varint,6,opt,name=deposit,proto3" json:"deposit,omitempty"`
}

func (m *DIDDirectory) Reset()         { *m = DIDDirectory{} }
func (m *DIDDirectory) String() string { return proto.CompactTextString(m) }
func (*DIDDirectory) ProtoMessage()    {}
func (*DIDDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_6922afb1243d7e9d, []int{0}
}
func (m *DIDDirectory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DIDDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DIDDirectory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DIDDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DIDDirectory.Merge(m, src)
}
func (m *DIDDirectory) XXX_Size() int {
	return m.Size()
}
func (m *DIDDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_DIDDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_DIDDirectory proto.InternalMessageInfo

func (m *DIDDirectory) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *DIDDirectory) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *DIDDirectory) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *DIDDirectory) GetModified() time.Time {
	if m != nil {
		return m.Modified
	}
	return time.Time{}
}

func (m *DIDDirectory) GetExp() time.Time {
	if m != nil {
		return m.Exp
	}
	return time.Time{}
}

func (m *DIDDirectory) GetDeposit() int64 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

func init() {
	proto.RegisterType((*DIDDirectory)(nil), "veranablockchain.diddirectory.DIDDirectory")
}

func init() {
	proto.RegisterFile("veranablockchain/diddirectory/types.proto", fileDescriptor_6922afb1243d7e9d)
}

var fileDescriptor_6922afb1243d7e9d = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0xcd, 0x36, 0xda, 0xd6, 0xd5, 0x83, 0x86, 0x1e, 0xd6, 0x82, 0x69, 0xf1, 0x54, 0x0f, 0x4d,
	0x40, 0x41, 0xbc, 0x28, 0x5a, 0x7a, 0xf1, 0x1a, 0x05, 0xc1, 0x8b, 0x24, 0xbb, 0xdb, 0x74, 0x31,
	0xc9, 0x84, 0xdd, 0xad, 0xb4, 0x7f, 0xd1, 0x2f, 0xf1, 0xe4, 0x47, 0xf4, 0x58, 0x3c, 0x79, 0x52,
	0x69, 0x7f, 0x44, 0x92, 0x34, 0x52, 0xc4, 0x4b, 0x2f, 0xcb, 0x7b, 0x33, 0xef, 0xed, 0x3c, 0x98,
	0xc1, 0x27, 0x2f, 0x5c, 0xfa, 0x89, 0x1f, 0x44, 0x40, 0x9f, 0xe9, 0xd0, 0x17, 0x89, 0xcb, 0x04,
	0x63, 0x42, 0x72, 0xaa, 0x41, 0x4e, 0x5c, 0x3d, 0x49, 0xb9, 0x72, 0x52, 0x09, 0x1a, 0xac, 0xa3,
	0xbf, 0x52, 0x67, 0x5d, 0xda, 0x3c, 0xf0, 0x63, 0x91, 0x80, 0x9b, 0xbf, 0x85, 0xa3, 0x79, 0x48,
	0x41, 0xc5, 0xa0, 0x9e, 0x72, 0xe6, 0x16, 0x64, 0xd5, 0x6a, 0x84, 0x10, 0x42, 0x51, 0xcf, 0xd0,
	0xaa, 0xda, 0x0a, 0x01, 0xc2, 0x88, 0xbb, 0x39, 0x0b, 0x46, 0x03, 0x57, 0x8b, 0x98, 0x2b, 0xed,
	0xc7, 0x69, 0x21, 0x38, 0x7e, 0xad, 0xe0, 0xbd, 0xfe, 0x6d, 0xbf, 0x5f, 0x4e, 0xb5, 0xf6, 0xb1,
	0xc9, 0x04, 0x23, 0xa8, 0x8d, 0x3a, 0x3b, 0x5e, 0x06, 0xad, 0x0b, 0x8c, 0x29, 0x24, 0x5a, 0x42,
	0x14, 0x71, 0x49, 0x2a, 0x59, 0xa3, 0x47, 0xde, 0xdf, 0xba, 0x8d, 0xd5, 0xfc, 0x1b, 0xc6, 0x24,
	0x57, 0xea, 0x4e, 0x4b, 0x91, 0x84, 0xde, 0x9a, 0xd6, 0xba, 0xc2, 0x35, 0x2a, 0xb9, 0xaf, 0x39,
	0x23, 0x66, 0x1b, 0x75, 0x76, 0x4f, 0x9b, 0x4e, 0x91, 0xc7, 0x29, 0xf3, 0x38, 0xf7, 0x65, 0x9e,
	0x5e, 0x7d, 0xf6, 0xd9, 0x32, 0xa6, 0x5f, 0x2d, 0xe4, 0x95, 0x26, 0xeb, 0x1a, 0xd7, 0x63, 0x60,
	0x62, 0x20, 0x38, 0x23, 0x5b, 0x1b, 0x7c, 0xf0, 0xeb, 0xb2, 0xce, 0xb1, 0xc9, 0xc7, 0x29, 0xd9,
	0xde, 0xc0, 0x9c, 0x19, 0x2c, 0x82, 0x6b, 0x8c, 0xa7, 0xa0, 0x84, 0x26, 0xd5, 0x36, 0xea, 0x98,
	0x5e, 0x49, 0x7b, 0x0f, 0xb3, 0x85, 0x8d, 0xe6, 0x0b, 0x1b, 0x7d, 0x2f, 0x6c, 0x34, 0x5d, 0xda,
	0xc6, 0x7c, 0x69, 0x1b, 0x1f, 0x4b, 0xdb, 0x78, 0xbc, 0x0c, 0x85, 0x1e, 0x8e, 0x02, 0x87, 0x42,
	0xec, 0x16, 0x9b, 0xed, 0x46, 0x7e, 0xa0, 0x4a, 0xbc, 0x76, 0x11, 0xe3, 0x7f, 0x6e, 0x22, 0xa8,
	0xe6, 0xa9, 0xce, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x85, 0x06, 0xde, 0x48, 0x41, 0x02, 0x00,
	0x00,
}

func (m *DIDDirectory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DIDDirectory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DIDDirectory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Deposit != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Deposit))
		i--
		dAtA[i] = 0x30
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Exp, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Exp):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintTypes(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x2a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Modified, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Modified):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintTypes(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x22
	n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintTypes(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x1a
	if len(m.Controller) > 0 {
		i -= len(m.Controller)
		copy(dAtA[i:], m.Controller)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Controller)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DIDDirectory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Controller)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovTypes(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Modified)
	n += 1 + l + sovTypes(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Exp)
	n += 1 + l + sovTypes(uint64(l))
	if m.Deposit != 0 {
		n += 1 + sovTypes(uint64(m.Deposit))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DIDDirectory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DIDDirectory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DIDDirectory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Modified, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Exp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			m.Deposit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Deposit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
