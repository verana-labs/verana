// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package validation

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_ValidatorDeposit                   protoreflect.MessageDescriptor
	fd_ValidatorDeposit_validator_perm_id protoreflect.FieldDescriptor
	fd_ValidatorDeposit_amount            protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_validation_types_proto_init()
	md_ValidatorDeposit = File_veranablockchain_validation_types_proto.Messages().ByName("ValidatorDeposit")
	fd_ValidatorDeposit_validator_perm_id = md_ValidatorDeposit.Fields().ByName("validator_perm_id")
	fd_ValidatorDeposit_amount = md_ValidatorDeposit.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_ValidatorDeposit)(nil)

type fastReflection_ValidatorDeposit ValidatorDeposit

func (x *ValidatorDeposit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidatorDeposit)(x)
}

func (x *ValidatorDeposit) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_validation_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidatorDeposit_messageType fastReflection_ValidatorDeposit_messageType
var _ protoreflect.MessageType = fastReflection_ValidatorDeposit_messageType{}

type fastReflection_ValidatorDeposit_messageType struct{}

func (x fastReflection_ValidatorDeposit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidatorDeposit)(nil)
}
func (x fastReflection_ValidatorDeposit_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidatorDeposit)
}
func (x fastReflection_ValidatorDeposit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorDeposit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidatorDeposit) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorDeposit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidatorDeposit) Type() protoreflect.MessageType {
	return _fastReflection_ValidatorDeposit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidatorDeposit) New() protoreflect.Message {
	return new(fastReflection_ValidatorDeposit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidatorDeposit) Interface() protoreflect.ProtoMessage {
	return (*ValidatorDeposit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidatorDeposit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ValidatorPermId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValidatorPermId)
		if !f(fd_ValidatorDeposit_validator_perm_id, value) {
			return
		}
	}
	if x.Amount != int64(0) {
		value := protoreflect.ValueOfInt64(x.Amount)
		if !f(fd_ValidatorDeposit_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidatorDeposit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		return x.ValidatorPermId != uint64(0)
	case "veranablockchain.validation.ValidatorDeposit.amount":
		return x.Amount != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorDeposit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		x.ValidatorPermId = uint64(0)
	case "veranablockchain.validation.ValidatorDeposit.amount":
		x.Amount = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidatorDeposit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		value := x.ValidatorPermId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.ValidatorDeposit.amount":
		value := x.Amount
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorDeposit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		x.ValidatorPermId = value.Uint()
	case "veranablockchain.validation.ValidatorDeposit.amount":
		x.Amount = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorDeposit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		panic(fmt.Errorf("field validator_perm_id of message veranablockchain.validation.ValidatorDeposit is not mutable"))
	case "veranablockchain.validation.ValidatorDeposit.amount":
		panic(fmt.Errorf("field amount of message veranablockchain.validation.ValidatorDeposit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidatorDeposit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.validation.ValidatorDeposit.validator_perm_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.ValidatorDeposit.amount":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.ValidatorDeposit"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.ValidatorDeposit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidatorDeposit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.validation.ValidatorDeposit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidatorDeposit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorDeposit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidatorDeposit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidatorDeposit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidatorDeposit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ValidatorPermId != 0 {
			n += 1 + runtime.Sov(uint64(x.ValidatorPermId))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorDeposit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x10
		}
		if x.ValidatorPermId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValidatorPermId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorDeposit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorDeposit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorPermId", wireType)
				}
				x.ValidatorPermId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValidatorPermId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_Validation_10_list)(nil)

type _Validation_10_list struct {
	list *[]*ValidatorDeposit
}

func (x *_Validation_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Validation_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Validation_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValidatorDeposit)
	(*x.list)[i] = concreteValue
}

func (x *_Validation_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValidatorDeposit)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Validation_10_list) AppendMutable() protoreflect.Value {
	v := new(ValidatorDeposit)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Validation_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Validation_10_list) NewElement() protoreflect.Value {
	v := new(ValidatorDeposit)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Validation_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Validation                    protoreflect.MessageDescriptor
	fd_Validation_id                 protoreflect.FieldDescriptor
	fd_Validation_applicant          protoreflect.FieldDescriptor
	fd_Validation_type               protoreflect.FieldDescriptor
	fd_Validation_created            protoreflect.FieldDescriptor
	fd_Validation_validator_perm_id  protoreflect.FieldDescriptor
	fd_Validation_state              protoreflect.FieldDescriptor
	fd_Validation_exp                protoreflect.FieldDescriptor
	fd_Validation_last_state_change  protoreflect.FieldDescriptor
	fd_Validation_applicant_deposit  protoreflect.FieldDescriptor
	fd_Validation_validator_deposits protoreflect.FieldDescriptor
	fd_Validation_current_fees       protoreflect.FieldDescriptor
	fd_Validation_current_deposit    protoreflect.FieldDescriptor
	fd_Validation_summary_hash       protoreflect.FieldDescriptor
	fd_Validation_term_requested     protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_validation_types_proto_init()
	md_Validation = File_veranablockchain_validation_types_proto.Messages().ByName("Validation")
	fd_Validation_id = md_Validation.Fields().ByName("id")
	fd_Validation_applicant = md_Validation.Fields().ByName("applicant")
	fd_Validation_type = md_Validation.Fields().ByName("type")
	fd_Validation_created = md_Validation.Fields().ByName("created")
	fd_Validation_validator_perm_id = md_Validation.Fields().ByName("validator_perm_id")
	fd_Validation_state = md_Validation.Fields().ByName("state")
	fd_Validation_exp = md_Validation.Fields().ByName("exp")
	fd_Validation_last_state_change = md_Validation.Fields().ByName("last_state_change")
	fd_Validation_applicant_deposit = md_Validation.Fields().ByName("applicant_deposit")
	fd_Validation_validator_deposits = md_Validation.Fields().ByName("validator_deposits")
	fd_Validation_current_fees = md_Validation.Fields().ByName("current_fees")
	fd_Validation_current_deposit = md_Validation.Fields().ByName("current_deposit")
	fd_Validation_summary_hash = md_Validation.Fields().ByName("summary_hash")
	fd_Validation_term_requested = md_Validation.Fields().ByName("term_requested")
}

var _ protoreflect.Message = (*fastReflection_Validation)(nil)

type fastReflection_Validation Validation

func (x *Validation) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Validation)(x)
}

func (x *Validation) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_validation_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Validation_messageType fastReflection_Validation_messageType
var _ protoreflect.MessageType = fastReflection_Validation_messageType{}

type fastReflection_Validation_messageType struct{}

func (x fastReflection_Validation_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Validation)(nil)
}
func (x fastReflection_Validation_messageType) New() protoreflect.Message {
	return new(fastReflection_Validation)
}
func (x fastReflection_Validation_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Validation
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Validation) Descriptor() protoreflect.MessageDescriptor {
	return md_Validation
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Validation) Type() protoreflect.MessageType {
	return _fastReflection_Validation_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Validation) New() protoreflect.Message {
	return new(fastReflection_Validation)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Validation) Interface() protoreflect.ProtoMessage {
	return (*Validation)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Validation) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Validation_id, value) {
			return
		}
	}
	if x.Applicant != "" {
		value := protoreflect.ValueOfString(x.Applicant)
		if !f(fd_Validation_applicant, value) {
			return
		}
	}
	if x.Type_ != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Type_))
		if !f(fd_Validation_type, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_Validation_created, value) {
			return
		}
	}
	if x.ValidatorPermId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ValidatorPermId)
		if !f(fd_Validation_validator_perm_id, value) {
			return
		}
	}
	if x.State != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.State))
		if !f(fd_Validation_state, value) {
			return
		}
	}
	if x.Exp != nil {
		value := protoreflect.ValueOfMessage(x.Exp.ProtoReflect())
		if !f(fd_Validation_exp, value) {
			return
		}
	}
	if x.LastStateChange != nil {
		value := protoreflect.ValueOfMessage(x.LastStateChange.ProtoReflect())
		if !f(fd_Validation_last_state_change, value) {
			return
		}
	}
	if x.ApplicantDeposit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ApplicantDeposit)
		if !f(fd_Validation_applicant_deposit, value) {
			return
		}
	}
	if len(x.ValidatorDeposits) != 0 {
		value := protoreflect.ValueOfList(&_Validation_10_list{list: &x.ValidatorDeposits})
		if !f(fd_Validation_validator_deposits, value) {
			return
		}
	}
	if x.CurrentFees != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentFees)
		if !f(fd_Validation_current_fees, value) {
			return
		}
	}
	if x.CurrentDeposit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentDeposit)
		if !f(fd_Validation_current_deposit, value) {
			return
		}
	}
	if x.SummaryHash != "" {
		value := protoreflect.ValueOfString(x.SummaryHash)
		if !f(fd_Validation_summary_hash, value) {
			return
		}
	}
	if x.TermRequested != nil {
		value := protoreflect.ValueOfMessage(x.TermRequested.ProtoReflect())
		if !f(fd_Validation_term_requested, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Validation) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.validation.Validation.id":
		return x.Id != uint64(0)
	case "veranablockchain.validation.Validation.applicant":
		return x.Applicant != ""
	case "veranablockchain.validation.Validation.type":
		return x.Type_ != 0
	case "veranablockchain.validation.Validation.created":
		return x.Created != nil
	case "veranablockchain.validation.Validation.validator_perm_id":
		return x.ValidatorPermId != uint64(0)
	case "veranablockchain.validation.Validation.state":
		return x.State != 0
	case "veranablockchain.validation.Validation.exp":
		return x.Exp != nil
	case "veranablockchain.validation.Validation.last_state_change":
		return x.LastStateChange != nil
	case "veranablockchain.validation.Validation.applicant_deposit":
		return x.ApplicantDeposit != uint64(0)
	case "veranablockchain.validation.Validation.validator_deposits":
		return len(x.ValidatorDeposits) != 0
	case "veranablockchain.validation.Validation.current_fees":
		return x.CurrentFees != uint64(0)
	case "veranablockchain.validation.Validation.current_deposit":
		return x.CurrentDeposit != uint64(0)
	case "veranablockchain.validation.Validation.summary_hash":
		return x.SummaryHash != ""
	case "veranablockchain.validation.Validation.term_requested":
		return x.TermRequested != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validation) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.validation.Validation.id":
		x.Id = uint64(0)
	case "veranablockchain.validation.Validation.applicant":
		x.Applicant = ""
	case "veranablockchain.validation.Validation.type":
		x.Type_ = 0
	case "veranablockchain.validation.Validation.created":
		x.Created = nil
	case "veranablockchain.validation.Validation.validator_perm_id":
		x.ValidatorPermId = uint64(0)
	case "veranablockchain.validation.Validation.state":
		x.State = 0
	case "veranablockchain.validation.Validation.exp":
		x.Exp = nil
	case "veranablockchain.validation.Validation.last_state_change":
		x.LastStateChange = nil
	case "veranablockchain.validation.Validation.applicant_deposit":
		x.ApplicantDeposit = uint64(0)
	case "veranablockchain.validation.Validation.validator_deposits":
		x.ValidatorDeposits = nil
	case "veranablockchain.validation.Validation.current_fees":
		x.CurrentFees = uint64(0)
	case "veranablockchain.validation.Validation.current_deposit":
		x.CurrentDeposit = uint64(0)
	case "veranablockchain.validation.Validation.summary_hash":
		x.SummaryHash = ""
	case "veranablockchain.validation.Validation.term_requested":
		x.TermRequested = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Validation) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.validation.Validation.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.Validation.applicant":
		value := x.Applicant
		return protoreflect.ValueOfString(value)
	case "veranablockchain.validation.Validation.type":
		value := x.Type_
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "veranablockchain.validation.Validation.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.validation.Validation.validator_perm_id":
		value := x.ValidatorPermId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.Validation.state":
		value := x.State
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "veranablockchain.validation.Validation.exp":
		value := x.Exp
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.validation.Validation.last_state_change":
		value := x.LastStateChange
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.validation.Validation.applicant_deposit":
		value := x.ApplicantDeposit
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.Validation.validator_deposits":
		if len(x.ValidatorDeposits) == 0 {
			return protoreflect.ValueOfList(&_Validation_10_list{})
		}
		listValue := &_Validation_10_list{list: &x.ValidatorDeposits}
		return protoreflect.ValueOfList(listValue)
	case "veranablockchain.validation.Validation.current_fees":
		value := x.CurrentFees
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.Validation.current_deposit":
		value := x.CurrentDeposit
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.validation.Validation.summary_hash":
		value := x.SummaryHash
		return protoreflect.ValueOfString(value)
	case "veranablockchain.validation.Validation.term_requested":
		value := x.TermRequested
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validation) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.validation.Validation.id":
		x.Id = value.Uint()
	case "veranablockchain.validation.Validation.applicant":
		x.Applicant = value.Interface().(string)
	case "veranablockchain.validation.Validation.type":
		x.Type_ = (ValidationType)(value.Enum())
	case "veranablockchain.validation.Validation.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.validation.Validation.validator_perm_id":
		x.ValidatorPermId = value.Uint()
	case "veranablockchain.validation.Validation.state":
		x.State = (ValidationState)(value.Enum())
	case "veranablockchain.validation.Validation.exp":
		x.Exp = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.validation.Validation.last_state_change":
		x.LastStateChange = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.validation.Validation.applicant_deposit":
		x.ApplicantDeposit = value.Uint()
	case "veranablockchain.validation.Validation.validator_deposits":
		lv := value.List()
		clv := lv.(*_Validation_10_list)
		x.ValidatorDeposits = *clv.list
	case "veranablockchain.validation.Validation.current_fees":
		x.CurrentFees = value.Uint()
	case "veranablockchain.validation.Validation.current_deposit":
		x.CurrentDeposit = value.Uint()
	case "veranablockchain.validation.Validation.summary_hash":
		x.SummaryHash = value.Interface().(string)
	case "veranablockchain.validation.Validation.term_requested":
		x.TermRequested = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validation) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.validation.Validation.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.validation.Validation.exp":
		if x.Exp == nil {
			x.Exp = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Exp.ProtoReflect())
	case "veranablockchain.validation.Validation.last_state_change":
		if x.LastStateChange == nil {
			x.LastStateChange = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.LastStateChange.ProtoReflect())
	case "veranablockchain.validation.Validation.validator_deposits":
		if x.ValidatorDeposits == nil {
			x.ValidatorDeposits = []*ValidatorDeposit{}
		}
		value := &_Validation_10_list{list: &x.ValidatorDeposits}
		return protoreflect.ValueOfList(value)
	case "veranablockchain.validation.Validation.term_requested":
		if x.TermRequested == nil {
			x.TermRequested = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.TermRequested.ProtoReflect())
	case "veranablockchain.validation.Validation.id":
		panic(fmt.Errorf("field id of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.applicant":
		panic(fmt.Errorf("field applicant of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.type":
		panic(fmt.Errorf("field type of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.validator_perm_id":
		panic(fmt.Errorf("field validator_perm_id of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.state":
		panic(fmt.Errorf("field state of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.applicant_deposit":
		panic(fmt.Errorf("field applicant_deposit of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.current_fees":
		panic(fmt.Errorf("field current_fees of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.current_deposit":
		panic(fmt.Errorf("field current_deposit of message veranablockchain.validation.Validation is not mutable"))
	case "veranablockchain.validation.Validation.summary_hash":
		panic(fmt.Errorf("field summary_hash of message veranablockchain.validation.Validation is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Validation) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.validation.Validation.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.Validation.applicant":
		return protoreflect.ValueOfString("")
	case "veranablockchain.validation.Validation.type":
		return protoreflect.ValueOfEnum(0)
	case "veranablockchain.validation.Validation.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.validation.Validation.validator_perm_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.Validation.state":
		return protoreflect.ValueOfEnum(0)
	case "veranablockchain.validation.Validation.exp":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.validation.Validation.last_state_change":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.validation.Validation.applicant_deposit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.Validation.validator_deposits":
		list := []*ValidatorDeposit{}
		return protoreflect.ValueOfList(&_Validation_10_list{list: &list})
	case "veranablockchain.validation.Validation.current_fees":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.Validation.current_deposit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.validation.Validation.summary_hash":
		return protoreflect.ValueOfString("")
	case "veranablockchain.validation.Validation.term_requested":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.validation.Validation"))
		}
		panic(fmt.Errorf("message veranablockchain.validation.Validation does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Validation) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.validation.Validation", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Validation) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validation) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Validation) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Validation) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Validation)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Applicant)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Type_ != 0 {
			n += 1 + runtime.Sov(uint64(x.Type_))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ValidatorPermId != 0 {
			n += 1 + runtime.Sov(uint64(x.ValidatorPermId))
		}
		if x.State != 0 {
			n += 1 + runtime.Sov(uint64(x.State))
		}
		if x.Exp != nil {
			l = options.Size(x.Exp)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LastStateChange != nil {
			l = options.Size(x.LastStateChange)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ApplicantDeposit != 0 {
			n += 1 + runtime.Sov(uint64(x.ApplicantDeposit))
		}
		if len(x.ValidatorDeposits) > 0 {
			for _, e := range x.ValidatorDeposits {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CurrentFees != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentFees))
		}
		if x.CurrentDeposit != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentDeposit))
		}
		l = len(x.SummaryHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TermRequested != nil {
			l = options.Size(x.TermRequested)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Validation)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TermRequested != nil {
			encoded, err := options.Marshal(x.TermRequested)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.SummaryHash) > 0 {
			i -= len(x.SummaryHash)
			copy(dAtA[i:], x.SummaryHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SummaryHash)))
			i--
			dAtA[i] = 0x6a
		}
		if x.CurrentDeposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentDeposit))
			i--
			dAtA[i] = 0x60
		}
		if x.CurrentFees != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentFees))
			i--
			dAtA[i] = 0x58
		}
		if len(x.ValidatorDeposits) > 0 {
			for iNdEx := len(x.ValidatorDeposits) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValidatorDeposits[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.ApplicantDeposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ApplicantDeposit))
			i--
			dAtA[i] = 0x48
		}
		if x.LastStateChange != nil {
			encoded, err := options.Marshal(x.LastStateChange)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.Exp != nil {
			encoded, err := options.Marshal(x.Exp)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.State != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.State))
			i--
			dAtA[i] = 0x30
		}
		if x.ValidatorPermId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValidatorPermId))
			i--
			dAtA[i] = 0x28
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.Type_ != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Type_))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Applicant) > 0 {
			i -= len(x.Applicant)
			copy(dAtA[i:], x.Applicant)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Applicant)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Validation)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validation: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validation: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Applicant", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Applicant = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				x.Type_ = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Type_ |= ValidationType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorPermId", wireType)
				}
				x.ValidatorPermId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValidatorPermId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				x.State = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.State |= ValidationState(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Exp", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Exp == nil {
					x.Exp = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Exp); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastStateChange", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastStateChange == nil {
					x.LastStateChange = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastStateChange); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ApplicantDeposit", wireType)
				}
				x.ApplicantDeposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ApplicantDeposit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorDeposits", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorDeposits = append(x.ValidatorDeposits, &ValidatorDeposit{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidatorDeposits[len(x.ValidatorDeposits)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentFees", wireType)
				}
				x.CurrentFees = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentFees |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentDeposit", wireType)
				}
				x.CurrentDeposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentDeposit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SummaryHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SummaryHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TermRequested", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TermRequested == nil {
					x.TermRequested = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TermRequested); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: veranablockchain/validation/types.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidationType int32

const (
	ValidationType_TYPE_UNSPECIFIED ValidationType = 0
	ValidationType_ISSUER_GRANTOR   ValidationType = 1
	ValidationType_VERIFIER_GRANTOR ValidationType = 2
	ValidationType_ISSUER           ValidationType = 3
	ValidationType_VERIFIER         ValidationType = 4
	ValidationType_HOLDER           ValidationType = 5
)

// Enum value maps for ValidationType.
var (
	ValidationType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "ISSUER_GRANTOR",
		2: "VERIFIER_GRANTOR",
		3: "ISSUER",
		4: "VERIFIER",
		5: "HOLDER",
	}
	ValidationType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"ISSUER_GRANTOR":   1,
		"VERIFIER_GRANTOR": 2,
		"ISSUER":           3,
		"VERIFIER":         4,
		"HOLDER":           5,
	}
)

func (x ValidationType) Enum() *ValidationType {
	p := new(ValidationType)
	*p = x
	return p
}

func (x ValidationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationType) Descriptor() protoreflect.EnumDescriptor {
	return file_veranablockchain_validation_types_proto_enumTypes[0].Descriptor()
}

func (ValidationType) Type() protoreflect.EnumType {
	return &file_veranablockchain_validation_types_proto_enumTypes[0]
}

func (x ValidationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationType.Descriptor instead.
func (ValidationType) EnumDescriptor() ([]byte, []int) {
	return file_veranablockchain_validation_types_proto_rawDescGZIP(), []int{0}
}

type ValidationState int32

const (
	ValidationState_STATE_UNSPECIFIED ValidationState = 0
	ValidationState_PENDING           ValidationState = 1
	ValidationState_VALIDATED         ValidationState = 2
	ValidationState_TERMINATED        ValidationState = 3
)

// Enum value maps for ValidationState.
var (
	ValidationState_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "PENDING",
		2: "VALIDATED",
		3: "TERMINATED",
	}
	ValidationState_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"PENDING":           1,
		"VALIDATED":         2,
		"TERMINATED":        3,
	}
)

func (x ValidationState) Enum() *ValidationState {
	p := new(ValidationState)
	*p = x
	return p
}

func (x ValidationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationState) Descriptor() protoreflect.EnumDescriptor {
	return file_veranablockchain_validation_types_proto_enumTypes[1].Descriptor()
}

func (ValidationState) Type() protoreflect.EnumType {
	return &file_veranablockchain_validation_types_proto_enumTypes[1]
}

func (x ValidationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationState.Descriptor instead.
func (ValidationState) EnumDescriptor() ([]byte, []int) {
	return file_veranablockchain_validation_types_proto_rawDescGZIP(), []int{1}
}

type ValidatorDeposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorPermId uint64 `protobuf:"varint,1,opt,name=validator_perm_id,json=validatorPermId,proto3" json:"validator_perm_id,omitempty"`
	Amount          int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ValidatorDeposit) Reset() {
	*x = ValidatorDeposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_validation_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorDeposit) ProtoMessage() {}

// Deprecated: Use ValidatorDeposit.ProtoReflect.Descriptor instead.
func (*ValidatorDeposit) Descriptor() ([]byte, []int) {
	return file_veranablockchain_validation_types_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorDeposit) GetValidatorPermId() uint64 {
	if x != nil {
		return x.ValidatorPermId
	}
	return 0
}

func (x *ValidatorDeposit) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Applicant         string                 `protobuf:"bytes,2,opt,name=applicant,proto3" json:"applicant,omitempty"`
	Type_             ValidationType         `protobuf:"varint,3,opt,name=type,proto3,enum=veranablockchain.validation.ValidationType" json:"type,omitempty"`
	Created           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	ValidatorPermId   uint64                 `protobuf:"varint,5,opt,name=validator_perm_id,json=validatorPermId,proto3" json:"validator_perm_id,omitempty"`
	State             ValidationState        `protobuf:"varint,6,opt,name=state,proto3,enum=veranablockchain.validation.ValidationState" json:"state,omitempty"`
	Exp               *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=exp,proto3" json:"exp,omitempty"`
	LastStateChange   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_state_change,json=lastStateChange,proto3" json:"last_state_change,omitempty"`
	ApplicantDeposit  uint64                 `protobuf:"varint,9,opt,name=applicant_deposit,json=applicantDeposit,proto3" json:"applicant_deposit,omitempty"`
	ValidatorDeposits []*ValidatorDeposit    `protobuf:"bytes,10,rep,name=validator_deposits,json=validatorDeposits,proto3" json:"validator_deposits,omitempty"`
	CurrentFees       uint64                 `protobuf:"varint,11,opt,name=current_fees,json=currentFees,proto3" json:"current_fees,omitempty"`
	CurrentDeposit    uint64                 `protobuf:"varint,12,opt,name=current_deposit,json=currentDeposit,proto3" json:"current_deposit,omitempty"`
	SummaryHash       string                 `protobuf:"bytes,13,opt,name=summary_hash,json=summaryHash,proto3" json:"summary_hash,omitempty"`
	TermRequested     *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=term_requested,json=termRequested,proto3" json:"term_requested,omitempty"`
}

func (x *Validation) Reset() {
	*x = Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_validation_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_veranablockchain_validation_types_proto_rawDescGZIP(), []int{1}
}

func (x *Validation) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Validation) GetApplicant() string {
	if x != nil {
		return x.Applicant
	}
	return ""
}

func (x *Validation) GetType_() ValidationType {
	if x != nil {
		return x.Type_
	}
	return ValidationType_TYPE_UNSPECIFIED
}

func (x *Validation) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Validation) GetValidatorPermId() uint64 {
	if x != nil {
		return x.ValidatorPermId
	}
	return 0
}

func (x *Validation) GetState() ValidationState {
	if x != nil {
		return x.State
	}
	return ValidationState_STATE_UNSPECIFIED
}

func (x *Validation) GetExp() *timestamppb.Timestamp {
	if x != nil {
		return x.Exp
	}
	return nil
}

func (x *Validation) GetLastStateChange() *timestamppb.Timestamp {
	if x != nil {
		return x.LastStateChange
	}
	return nil
}

func (x *Validation) GetApplicantDeposit() uint64 {
	if x != nil {
		return x.ApplicantDeposit
	}
	return 0
}

func (x *Validation) GetValidatorDeposits() []*ValidatorDeposit {
	if x != nil {
		return x.ValidatorDeposits
	}
	return nil
}

func (x *Validation) GetCurrentFees() uint64 {
	if x != nil {
		return x.CurrentFees
	}
	return 0
}

func (x *Validation) GetCurrentDeposit() uint64 {
	if x != nil {
		return x.CurrentDeposit
	}
	return 0
}

func (x *Validation) GetSummaryHash() string {
	if x != nil {
		return x.SummaryHash
	}
	return ""
}

func (x *Validation) GetTermRequested() *timestamppb.Timestamp {
	if x != nil {
		return x.TermRequested
	}
	return nil
}

var File_veranablockchain_validation_types_proto protoreflect.FileDescriptor

var file_veranablockchain_validation_types_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x76, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x10, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x9c, 0x06, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf,
	0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x65,
	0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x01, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x03,
	0x65, 0x78, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00,
	0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x12, 0x62, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x4b, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x01, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x74, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x2a, 0x76, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x53,
	0x53, 0x55, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54,
	0x4f, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x53, 0x53, 0x55, 0x45, 0x52, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0a,
	0x0a, 0x06, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x05, 0x2a, 0x54, 0x0a, 0x0f, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x42, 0x84, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x65, 0x72, 0x61, 0x6e, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x2d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x56,
	0x56, 0x58, 0xaa, 0x02, 0x1b, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0xca, 0x02, 0x1b, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02,
	0x27, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1c, 0x56, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_veranablockchain_validation_types_proto_rawDescOnce sync.Once
	file_veranablockchain_validation_types_proto_rawDescData = file_veranablockchain_validation_types_proto_rawDesc
)

func file_veranablockchain_validation_types_proto_rawDescGZIP() []byte {
	file_veranablockchain_validation_types_proto_rawDescOnce.Do(func() {
		file_veranablockchain_validation_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_veranablockchain_validation_types_proto_rawDescData)
	})
	return file_veranablockchain_validation_types_proto_rawDescData
}

var file_veranablockchain_validation_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_veranablockchain_validation_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_veranablockchain_validation_types_proto_goTypes = []interface{}{
	(ValidationType)(0),           // 0: veranablockchain.validation.ValidationType
	(ValidationState)(0),          // 1: veranablockchain.validation.ValidationState
	(*ValidatorDeposit)(nil),      // 2: veranablockchain.validation.ValidatorDeposit
	(*Validation)(nil),            // 3: veranablockchain.validation.Validation
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_veranablockchain_validation_types_proto_depIdxs = []int32{
	0, // 0: veranablockchain.validation.Validation.type:type_name -> veranablockchain.validation.ValidationType
	4, // 1: veranablockchain.validation.Validation.created:type_name -> google.protobuf.Timestamp
	1, // 2: veranablockchain.validation.Validation.state:type_name -> veranablockchain.validation.ValidationState
	4, // 3: veranablockchain.validation.Validation.exp:type_name -> google.protobuf.Timestamp
	4, // 4: veranablockchain.validation.Validation.last_state_change:type_name -> google.protobuf.Timestamp
	2, // 5: veranablockchain.validation.Validation.validator_deposits:type_name -> veranablockchain.validation.ValidatorDeposit
	4, // 6: veranablockchain.validation.Validation.term_requested:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_veranablockchain_validation_types_proto_init() }
func file_veranablockchain_validation_types_proto_init() {
	if File_veranablockchain_validation_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_veranablockchain_validation_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorDeposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veranablockchain_validation_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_veranablockchain_validation_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_veranablockchain_validation_types_proto_goTypes,
		DependencyIndexes: file_veranablockchain_validation_types_proto_depIdxs,
		EnumInfos:         file_veranablockchain_validation_types_proto_enumTypes,
		MessageInfos:      file_veranablockchain_validation_types_proto_msgTypes,
	}.Build()
	File_veranablockchain_validation_types_proto = out.File
	file_veranablockchain_validation_types_proto_rawDesc = nil
	file_veranablockchain_validation_types_proto_goTypes = nil
	file_veranablockchain_validation_types_proto_depIdxs = nil
}
