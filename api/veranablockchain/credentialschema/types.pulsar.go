// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package credentialschema

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_CredentialSchema                                             protoreflect.MessageDescriptor
	fd_CredentialSchema_id                                          protoreflect.FieldDescriptor
	fd_CredentialSchema_tr_id                                       protoreflect.FieldDescriptor
	fd_CredentialSchema_created                                     protoreflect.FieldDescriptor
	fd_CredentialSchema_deposit                                     protoreflect.FieldDescriptor
	fd_CredentialSchema_json_schema                                 protoreflect.FieldDescriptor
	fd_CredentialSchema_issuer_grantor_validation_validity_period   protoreflect.FieldDescriptor
	fd_CredentialSchema_verifier_grantor_validation_validity_period protoreflect.FieldDescriptor
	fd_CredentialSchema_issuer_validation_validity_period           protoreflect.FieldDescriptor
	fd_CredentialSchema_verifier_validation_validity_period         protoreflect.FieldDescriptor
	fd_CredentialSchema_holder_validation_validity_period           protoreflect.FieldDescriptor
	fd_CredentialSchema_issuer_perm_management_mode                 protoreflect.FieldDescriptor
	fd_CredentialSchema_verifier_perm_management_mode               protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_credentialschema_types_proto_init()
	md_CredentialSchema = File_veranablockchain_credentialschema_types_proto.Messages().ByName("CredentialSchema")
	fd_CredentialSchema_id = md_CredentialSchema.Fields().ByName("id")
	fd_CredentialSchema_tr_id = md_CredentialSchema.Fields().ByName("tr_id")
	fd_CredentialSchema_created = md_CredentialSchema.Fields().ByName("created")
	fd_CredentialSchema_deposit = md_CredentialSchema.Fields().ByName("deposit")
	fd_CredentialSchema_json_schema = md_CredentialSchema.Fields().ByName("json_schema")
	fd_CredentialSchema_issuer_grantor_validation_validity_period = md_CredentialSchema.Fields().ByName("issuer_grantor_validation_validity_period")
	fd_CredentialSchema_verifier_grantor_validation_validity_period = md_CredentialSchema.Fields().ByName("verifier_grantor_validation_validity_period")
	fd_CredentialSchema_issuer_validation_validity_period = md_CredentialSchema.Fields().ByName("issuer_validation_validity_period")
	fd_CredentialSchema_verifier_validation_validity_period = md_CredentialSchema.Fields().ByName("verifier_validation_validity_period")
	fd_CredentialSchema_holder_validation_validity_period = md_CredentialSchema.Fields().ByName("holder_validation_validity_period")
	fd_CredentialSchema_issuer_perm_management_mode = md_CredentialSchema.Fields().ByName("issuer_perm_management_mode")
	fd_CredentialSchema_verifier_perm_management_mode = md_CredentialSchema.Fields().ByName("verifier_perm_management_mode")
}

var _ protoreflect.Message = (*fastReflection_CredentialSchema)(nil)

type fastReflection_CredentialSchema CredentialSchema

func (x *CredentialSchema) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CredentialSchema)(x)
}

func (x *CredentialSchema) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_credentialschema_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CredentialSchema_messageType fastReflection_CredentialSchema_messageType
var _ protoreflect.MessageType = fastReflection_CredentialSchema_messageType{}

type fastReflection_CredentialSchema_messageType struct{}

func (x fastReflection_CredentialSchema_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CredentialSchema)(nil)
}
func (x fastReflection_CredentialSchema_messageType) New() protoreflect.Message {
	return new(fastReflection_CredentialSchema)
}
func (x fastReflection_CredentialSchema_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CredentialSchema
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CredentialSchema) Descriptor() protoreflect.MessageDescriptor {
	return md_CredentialSchema
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CredentialSchema) Type() protoreflect.MessageType {
	return _fastReflection_CredentialSchema_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CredentialSchema) New() protoreflect.Message {
	return new(fastReflection_CredentialSchema)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CredentialSchema) Interface() protoreflect.ProtoMessage {
	return (*CredentialSchema)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CredentialSchema) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_CredentialSchema_id, value) {
			return
		}
	}
	if x.TrId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TrId)
		if !f(fd_CredentialSchema_tr_id, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_CredentialSchema_created, value) {
			return
		}
	}
	if x.Deposit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Deposit)
		if !f(fd_CredentialSchema_deposit, value) {
			return
		}
	}
	if x.JsonSchema != "" {
		value := protoreflect.ValueOfString(x.JsonSchema)
		if !f(fd_CredentialSchema_json_schema, value) {
			return
		}
	}
	if x.IssuerGrantorValidationValidityPeriod != uint32(0) {
		value := protoreflect.ValueOfUint32(x.IssuerGrantorValidationValidityPeriod)
		if !f(fd_CredentialSchema_issuer_grantor_validation_validity_period, value) {
			return
		}
	}
	if x.VerifierGrantorValidationValidityPeriod != uint32(0) {
		value := protoreflect.ValueOfUint32(x.VerifierGrantorValidationValidityPeriod)
		if !f(fd_CredentialSchema_verifier_grantor_validation_validity_period, value) {
			return
		}
	}
	if x.IssuerValidationValidityPeriod != uint32(0) {
		value := protoreflect.ValueOfUint32(x.IssuerValidationValidityPeriod)
		if !f(fd_CredentialSchema_issuer_validation_validity_period, value) {
			return
		}
	}
	if x.VerifierValidationValidityPeriod != uint32(0) {
		value := protoreflect.ValueOfUint32(x.VerifierValidationValidityPeriod)
		if !f(fd_CredentialSchema_verifier_validation_validity_period, value) {
			return
		}
	}
	if x.HolderValidationValidityPeriod != uint32(0) {
		value := protoreflect.ValueOfUint32(x.HolderValidationValidityPeriod)
		if !f(fd_CredentialSchema_holder_validation_validity_period, value) {
			return
		}
	}
	if x.IssuerPermManagementMode != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.IssuerPermManagementMode))
		if !f(fd_CredentialSchema_issuer_perm_management_mode, value) {
			return
		}
	}
	if x.VerifierPermManagementMode != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.VerifierPermManagementMode))
		if !f(fd_CredentialSchema_verifier_perm_management_mode, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CredentialSchema) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.id":
		return x.Id != uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		return x.TrId != uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.created":
		return x.Created != nil
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		return x.Deposit != uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		return x.JsonSchema != ""
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		return x.IssuerGrantorValidationValidityPeriod != uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		return x.VerifierGrantorValidationValidityPeriod != uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		return x.IssuerValidationValidityPeriod != uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		return x.VerifierValidationValidityPeriod != uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		return x.HolderValidationValidityPeriod != uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		return x.IssuerPermManagementMode != 0
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		return x.VerifierPermManagementMode != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CredentialSchema) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.id":
		x.Id = uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		x.TrId = uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.created":
		x.Created = nil
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		x.Deposit = uint64(0)
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		x.JsonSchema = ""
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		x.IssuerGrantorValidationValidityPeriod = uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		x.VerifierGrantorValidationValidityPeriod = uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		x.IssuerValidationValidityPeriod = uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		x.VerifierValidationValidityPeriod = uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		x.HolderValidationValidityPeriod = uint32(0)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		x.IssuerPermManagementMode = 0
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		x.VerifierPermManagementMode = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CredentialSchema) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		value := x.TrId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.credentialschema.CredentialSchema.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		value := x.Deposit
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		value := x.JsonSchema
		return protoreflect.ValueOfString(value)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		value := x.IssuerGrantorValidationValidityPeriod
		return protoreflect.ValueOfUint32(value)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		value := x.VerifierGrantorValidationValidityPeriod
		return protoreflect.ValueOfUint32(value)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		value := x.IssuerValidationValidityPeriod
		return protoreflect.ValueOfUint32(value)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		value := x.VerifierValidationValidityPeriod
		return protoreflect.ValueOfUint32(value)
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		value := x.HolderValidationValidityPeriod
		return protoreflect.ValueOfUint32(value)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		value := x.IssuerPermManagementMode
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		value := x.VerifierPermManagementMode
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CredentialSchema) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.id":
		x.Id = value.Uint()
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		x.TrId = value.Uint()
	case "veranablockchain.credentialschema.CredentialSchema.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		x.Deposit = value.Uint()
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		x.JsonSchema = value.Interface().(string)
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		x.IssuerGrantorValidationValidityPeriod = uint32(value.Uint())
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		x.VerifierGrantorValidationValidityPeriod = uint32(value.Uint())
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		x.IssuerValidationValidityPeriod = uint32(value.Uint())
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		x.VerifierValidationValidityPeriod = uint32(value.Uint())
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		x.HolderValidationValidityPeriod = uint32(value.Uint())
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		x.IssuerPermManagementMode = (CredentialSchemaPermManagementMode)(value.Enum())
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		x.VerifierPermManagementMode = (CredentialSchemaPermManagementMode)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CredentialSchema) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.credentialschema.CredentialSchema.id":
		panic(fmt.Errorf("field id of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		panic(fmt.Errorf("field tr_id of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		panic(fmt.Errorf("field deposit of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		panic(fmt.Errorf("field json_schema of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		panic(fmt.Errorf("field issuer_grantor_validation_validity_period of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		panic(fmt.Errorf("field verifier_grantor_validation_validity_period of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		panic(fmt.Errorf("field issuer_validation_validity_period of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		panic(fmt.Errorf("field verifier_validation_validity_period of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		panic(fmt.Errorf("field holder_validation_validity_period of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		panic(fmt.Errorf("field issuer_perm_management_mode of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		panic(fmt.Errorf("field verifier_perm_management_mode of message veranablockchain.credentialschema.CredentialSchema is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CredentialSchema) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.credentialschema.CredentialSchema.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.credentialschema.CredentialSchema.tr_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.credentialschema.CredentialSchema.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.credentialschema.CredentialSchema.deposit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.credentialschema.CredentialSchema.json_schema":
		return protoreflect.ValueOfString("")
	case "veranablockchain.credentialschema.CredentialSchema.issuer_grantor_validation_validity_period":
		return protoreflect.ValueOfUint32(uint32(0))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_grantor_validation_validity_period":
		return protoreflect.ValueOfUint32(uint32(0))
	case "veranablockchain.credentialschema.CredentialSchema.issuer_validation_validity_period":
		return protoreflect.ValueOfUint32(uint32(0))
	case "veranablockchain.credentialschema.CredentialSchema.verifier_validation_validity_period":
		return protoreflect.ValueOfUint32(uint32(0))
	case "veranablockchain.credentialschema.CredentialSchema.holder_validation_validity_period":
		return protoreflect.ValueOfUint32(uint32(0))
	case "veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode":
		return protoreflect.ValueOfEnum(0)
	case "veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.credentialschema.CredentialSchema"))
		}
		panic(fmt.Errorf("message veranablockchain.credentialschema.CredentialSchema does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CredentialSchema) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.credentialschema.CredentialSchema", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CredentialSchema) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CredentialSchema) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CredentialSchema) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CredentialSchema) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CredentialSchema)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.TrId != 0 {
			n += 1 + runtime.Sov(uint64(x.TrId))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != 0 {
			n += 1 + runtime.Sov(uint64(x.Deposit))
		}
		l = len(x.JsonSchema)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IssuerGrantorValidationValidityPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.IssuerGrantorValidationValidityPeriod))
		}
		if x.VerifierGrantorValidationValidityPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.VerifierGrantorValidationValidityPeriod))
		}
		if x.IssuerValidationValidityPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.IssuerValidationValidityPeriod))
		}
		if x.VerifierValidationValidityPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.VerifierValidationValidityPeriod))
		}
		if x.HolderValidationValidityPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.HolderValidationValidityPeriod))
		}
		if x.IssuerPermManagementMode != 0 {
			n += 1 + runtime.Sov(uint64(x.IssuerPermManagementMode))
		}
		if x.VerifierPermManagementMode != 0 {
			n += 1 + runtime.Sov(uint64(x.VerifierPermManagementMode))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CredentialSchema)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VerifierPermManagementMode != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VerifierPermManagementMode))
			i--
			dAtA[i] = 0x60
		}
		if x.IssuerPermManagementMode != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IssuerPermManagementMode))
			i--
			dAtA[i] = 0x58
		}
		if x.HolderValidationValidityPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.HolderValidationValidityPeriod))
			i--
			dAtA[i] = 0x50
		}
		if x.VerifierValidationValidityPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VerifierValidationValidityPeriod))
			i--
			dAtA[i] = 0x48
		}
		if x.IssuerValidationValidityPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IssuerValidationValidityPeriod))
			i--
			dAtA[i] = 0x40
		}
		if x.VerifierGrantorValidationValidityPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VerifierGrantorValidationValidityPeriod))
			i--
			dAtA[i] = 0x38
		}
		if x.IssuerGrantorValidationValidityPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IssuerGrantorValidationValidityPeriod))
			i--
			dAtA[i] = 0x30
		}
		if len(x.JsonSchema) > 0 {
			i -= len(x.JsonSchema)
			copy(dAtA[i:], x.JsonSchema)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.JsonSchema)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Deposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Deposit))
			i--
			dAtA[i] = 0x20
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TrId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TrId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CredentialSchema)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CredentialSchema: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CredentialSchema: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrId", wireType)
				}
				x.TrId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TrId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				x.Deposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Deposit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JsonSchema", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.JsonSchema = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IssuerGrantorValidationValidityPeriod", wireType)
				}
				x.IssuerGrantorValidationValidityPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IssuerGrantorValidationValidityPeriod |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifierGrantorValidationValidityPeriod", wireType)
				}
				x.VerifierGrantorValidationValidityPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VerifierGrantorValidationValidityPeriod |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IssuerValidationValidityPeriod", wireType)
				}
				x.IssuerValidationValidityPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IssuerValidationValidityPeriod |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifierValidationValidityPeriod", wireType)
				}
				x.VerifierValidationValidityPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VerifierValidationValidityPeriod |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HolderValidationValidityPeriod", wireType)
				}
				x.HolderValidationValidityPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.HolderValidationValidityPeriod |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IssuerPermManagementMode", wireType)
				}
				x.IssuerPermManagementMode = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IssuerPermManagementMode |= CredentialSchemaPermManagementMode(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifierPermManagementMode", wireType)
				}
				x.VerifierPermManagementMode = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VerifierPermManagementMode |= CredentialSchemaPermManagementMode(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: veranablockchain/credentialschema/types.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CredentialSchemaPermManagementMode defines how permissions are managed
type CredentialSchemaPermManagementMode int32

const (
	// Default to prevent accidental omission
	CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_UNSPECIFIED CredentialSchemaPermManagementMode = 0
	// Anyone can create their own permission
	CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_OPEN CredentialSchemaPermManagementMode = 1
	// Requires validation from a grantor
	CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_GRANTOR_VALIDATION CredentialSchemaPermManagementMode = 2
	// Requires validation from trust registry
	CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_TRUST_REGISTRY_VALIDATION CredentialSchemaPermManagementMode = 3
)

// Enum value maps for CredentialSchemaPermManagementMode.
var (
	CredentialSchemaPermManagementMode_name = map[int32]string{
		0: "PERM_MANAGEMENT_MODE_UNSPECIFIED",
		1: "PERM_MANAGEMENT_MODE_OPEN",
		2: "PERM_MANAGEMENT_MODE_GRANTOR_VALIDATION",
		3: "PERM_MANAGEMENT_MODE_TRUST_REGISTRY_VALIDATION",
	}
	CredentialSchemaPermManagementMode_value = map[string]int32{
		"PERM_MANAGEMENT_MODE_UNSPECIFIED":               0,
		"PERM_MANAGEMENT_MODE_OPEN":                      1,
		"PERM_MANAGEMENT_MODE_GRANTOR_VALIDATION":        2,
		"PERM_MANAGEMENT_MODE_TRUST_REGISTRY_VALIDATION": 3,
	}
)

func (x CredentialSchemaPermManagementMode) Enum() *CredentialSchemaPermManagementMode {
	p := new(CredentialSchemaPermManagementMode)
	*p = x
	return p
}

func (x CredentialSchemaPermManagementMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialSchemaPermManagementMode) Descriptor() protoreflect.EnumDescriptor {
	return file_veranablockchain_credentialschema_types_proto_enumTypes[0].Descriptor()
}

func (CredentialSchemaPermManagementMode) Type() protoreflect.EnumType {
	return &file_veranablockchain_credentialschema_types_proto_enumTypes[0]
}

func (x CredentialSchemaPermManagementMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CredentialSchemaPermManagementMode.Descriptor instead.
func (CredentialSchemaPermManagementMode) EnumDescriptor() ([]byte, []int) {
	return file_veranablockchain_credentialschema_types_proto_rawDescGZIP(), []int{0}
}

// CredentialSchema defines the structure for a credential schema
type CredentialSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                      uint64                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TrId                                    uint64                             `protobuf:"varint,2,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Created                                 *timestamppb.Timestamp             `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Deposit                                 uint64                             `protobuf:"varint,4,opt,name=deposit,proto3" json:"deposit,omitempty"`
	JsonSchema                              string                             `protobuf:"bytes,5,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
	IssuerGrantorValidationValidityPeriod   uint32                             `protobuf:"varint,6,opt,name=issuer_grantor_validation_validity_period,json=issuerGrantorValidationValidityPeriod,proto3" json:"issuer_grantor_validation_validity_period,omitempty"`
	VerifierGrantorValidationValidityPeriod uint32                             `protobuf:"varint,7,opt,name=verifier_grantor_validation_validity_period,json=verifierGrantorValidationValidityPeriod,proto3" json:"verifier_grantor_validation_validity_period,omitempty"`
	IssuerValidationValidityPeriod          uint32                             `protobuf:"varint,8,opt,name=issuer_validation_validity_period,json=issuerValidationValidityPeriod,proto3" json:"issuer_validation_validity_period,omitempty"`
	VerifierValidationValidityPeriod        uint32                             `protobuf:"varint,9,opt,name=verifier_validation_validity_period,json=verifierValidationValidityPeriod,proto3" json:"verifier_validation_validity_period,omitempty"`
	HolderValidationValidityPeriod          uint32                             `protobuf:"varint,10,opt,name=holder_validation_validity_period,json=holderValidationValidityPeriod,proto3" json:"holder_validation_validity_period,omitempty"`
	IssuerPermManagementMode                CredentialSchemaPermManagementMode `protobuf:"varint,11,opt,name=issuer_perm_management_mode,json=issuerPermManagementMode,proto3,enum=veranablockchain.credentialschema.CredentialSchemaPermManagementMode" json:"issuer_perm_management_mode,omitempty"`
	VerifierPermManagementMode              CredentialSchemaPermManagementMode `protobuf:"varint,12,opt,name=verifier_perm_management_mode,json=verifierPermManagementMode,proto3,enum=veranablockchain.credentialschema.CredentialSchemaPermManagementMode" json:"verifier_perm_management_mode,omitempty"`
}

func (x *CredentialSchema) Reset() {
	*x = CredentialSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_credentialschema_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialSchema) ProtoMessage() {}

// Deprecated: Use CredentialSchema.ProtoReflect.Descriptor instead.
func (*CredentialSchema) Descriptor() ([]byte, []int) {
	return file_veranablockchain_credentialschema_types_proto_rawDescGZIP(), []int{0}
}

func (x *CredentialSchema) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CredentialSchema) GetTrId() uint64 {
	if x != nil {
		return x.TrId
	}
	return 0
}

func (x *CredentialSchema) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CredentialSchema) GetDeposit() uint64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *CredentialSchema) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

func (x *CredentialSchema) GetIssuerGrantorValidationValidityPeriod() uint32 {
	if x != nil {
		return x.IssuerGrantorValidationValidityPeriod
	}
	return 0
}

func (x *CredentialSchema) GetVerifierGrantorValidationValidityPeriod() uint32 {
	if x != nil {
		return x.VerifierGrantorValidationValidityPeriod
	}
	return 0
}

func (x *CredentialSchema) GetIssuerValidationValidityPeriod() uint32 {
	if x != nil {
		return x.IssuerValidationValidityPeriod
	}
	return 0
}

func (x *CredentialSchema) GetVerifierValidationValidityPeriod() uint32 {
	if x != nil {
		return x.VerifierValidationValidityPeriod
	}
	return 0
}

func (x *CredentialSchema) GetHolderValidationValidityPeriod() uint32 {
	if x != nil {
		return x.HolderValidationValidityPeriod
	}
	return 0
}

func (x *CredentialSchema) GetIssuerPermManagementMode() CredentialSchemaPermManagementMode {
	if x != nil {
		return x.IssuerPermManagementMode
	}
	return CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_UNSPECIFIED
}

func (x *CredentialSchema) GetVerifierPermManagementMode() CredentialSchemaPermManagementMode {
	if x != nil {
		return x.VerifierPermManagementMode
	}
	return CredentialSchemaPermManagementMode_PERM_MANAGEMENT_MODE_UNSPECIFIED
}

var File_veranablockchain_credentialschema_types_proto protoreflect.FileDescriptor

var file_veranablockchain_credentialschema_types_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x21, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x06, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x72, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08,
	0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x58, 0x0a, 0x29,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x25, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x5c, 0x0a, 0x2b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x27, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x49, 0x0a, 0x21, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x4d, 0x0a, 0x23, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x49,
	0x0a, 0x21, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x1b, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x45, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x50, 0x65, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x18, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x88, 0x01, 0x0a, 0x1d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x65, 0x72,
	0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x1a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0xca, 0x01, 0x0a, 0x22,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x50, 0x65, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x45, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x52, 0x4d,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x45, 0x52, 0x4d, 0x5f,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x47, 0x52, 0x41, 0x4e, 0x54, 0x4f, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x32, 0x0a, 0x2e, 0x50, 0x45, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x4e,
	0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x52, 0x55,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x42, 0xa8, 0x02, 0x0a, 0x25, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x72,
	0x61, 0x6e, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x2d,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0xa2, 0x02, 0x03, 0x56, 0x43, 0x58, 0xaa, 0x02, 0x21, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xca, 0x02, 0x21, 0x56, 0x65, 0x72,
	0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xe2, 0x02,
	0x2d, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x22, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x3a, 0x3a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_veranablockchain_credentialschema_types_proto_rawDescOnce sync.Once
	file_veranablockchain_credentialschema_types_proto_rawDescData = file_veranablockchain_credentialschema_types_proto_rawDesc
)

func file_veranablockchain_credentialschema_types_proto_rawDescGZIP() []byte {
	file_veranablockchain_credentialschema_types_proto_rawDescOnce.Do(func() {
		file_veranablockchain_credentialschema_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_veranablockchain_credentialschema_types_proto_rawDescData)
	})
	return file_veranablockchain_credentialschema_types_proto_rawDescData
}

var file_veranablockchain_credentialschema_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_veranablockchain_credentialschema_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_veranablockchain_credentialschema_types_proto_goTypes = []interface{}{
	(CredentialSchemaPermManagementMode)(0), // 0: veranablockchain.credentialschema.CredentialSchemaPermManagementMode
	(*CredentialSchema)(nil),                // 1: veranablockchain.credentialschema.CredentialSchema
	(*timestamppb.Timestamp)(nil),           // 2: google.protobuf.Timestamp
}
var file_veranablockchain_credentialschema_types_proto_depIdxs = []int32{
	2, // 0: veranablockchain.credentialschema.CredentialSchema.created:type_name -> google.protobuf.Timestamp
	0, // 1: veranablockchain.credentialschema.CredentialSchema.issuer_perm_management_mode:type_name -> veranablockchain.credentialschema.CredentialSchemaPermManagementMode
	0, // 2: veranablockchain.credentialschema.CredentialSchema.verifier_perm_management_mode:type_name -> veranablockchain.credentialschema.CredentialSchemaPermManagementMode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_veranablockchain_credentialschema_types_proto_init() }
func file_veranablockchain_credentialschema_types_proto_init() {
	if File_veranablockchain_credentialschema_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_veranablockchain_credentialschema_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_veranablockchain_credentialschema_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_veranablockchain_credentialschema_types_proto_goTypes,
		DependencyIndexes: file_veranablockchain_credentialschema_types_proto_depIdxs,
		EnumInfos:         file_veranablockchain_credentialschema_types_proto_enumTypes,
		MessageInfos:      file_veranablockchain_credentialschema_types_proto_msgTypes,
	}.Build()
	File_veranablockchain_credentialschema_types_proto = out.File
	file_veranablockchain_credentialschema_types_proto_rawDesc = nil
	file_veranablockchain_credentialschema_types_proto_goTypes = nil
	file_veranablockchain_credentialschema_types_proto_depIdxs = nil
}
