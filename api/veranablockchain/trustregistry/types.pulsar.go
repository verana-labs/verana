// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package trustregistry

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_TrustRegistry                protoreflect.MessageDescriptor
	fd_TrustRegistry_id             protoreflect.FieldDescriptor
	fd_TrustRegistry_did            protoreflect.FieldDescriptor
	fd_TrustRegistry_controller     protoreflect.FieldDescriptor
	fd_TrustRegistry_created        protoreflect.FieldDescriptor
	fd_TrustRegistry_modified       protoreflect.FieldDescriptor
	fd_TrustRegistry_archived       protoreflect.FieldDescriptor
	fd_TrustRegistry_deposit        protoreflect.FieldDescriptor
	fd_TrustRegistry_aka            protoreflect.FieldDescriptor
	fd_TrustRegistry_active_version protoreflect.FieldDescriptor
	fd_TrustRegistry_language       protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_trustregistry_types_proto_init()
	md_TrustRegistry = File_veranablockchain_trustregistry_types_proto.Messages().ByName("TrustRegistry")
	fd_TrustRegistry_id = md_TrustRegistry.Fields().ByName("id")
	fd_TrustRegistry_did = md_TrustRegistry.Fields().ByName("did")
	fd_TrustRegistry_controller = md_TrustRegistry.Fields().ByName("controller")
	fd_TrustRegistry_created = md_TrustRegistry.Fields().ByName("created")
	fd_TrustRegistry_modified = md_TrustRegistry.Fields().ByName("modified")
	fd_TrustRegistry_archived = md_TrustRegistry.Fields().ByName("archived")
	fd_TrustRegistry_deposit = md_TrustRegistry.Fields().ByName("deposit")
	fd_TrustRegistry_aka = md_TrustRegistry.Fields().ByName("aka")
	fd_TrustRegistry_active_version = md_TrustRegistry.Fields().ByName("active_version")
	fd_TrustRegistry_language = md_TrustRegistry.Fields().ByName("language")
}

var _ protoreflect.Message = (*fastReflection_TrustRegistry)(nil)

type fastReflection_TrustRegistry TrustRegistry

func (x *TrustRegistry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TrustRegistry)(x)
}

func (x *TrustRegistry) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TrustRegistry_messageType fastReflection_TrustRegistry_messageType
var _ protoreflect.MessageType = fastReflection_TrustRegistry_messageType{}

type fastReflection_TrustRegistry_messageType struct{}

func (x fastReflection_TrustRegistry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TrustRegistry)(nil)
}
func (x fastReflection_TrustRegistry_messageType) New() protoreflect.Message {
	return new(fastReflection_TrustRegistry)
}
func (x fastReflection_TrustRegistry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TrustRegistry) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TrustRegistry) Type() protoreflect.MessageType {
	return _fastReflection_TrustRegistry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TrustRegistry) New() protoreflect.Message {
	return new(fastReflection_TrustRegistry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TrustRegistry) Interface() protoreflect.ProtoMessage {
	return (*TrustRegistry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TrustRegistry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_TrustRegistry_id, value) {
			return
		}
	}
	if x.Did != "" {
		value := protoreflect.ValueOfString(x.Did)
		if !f(fd_TrustRegistry_did, value) {
			return
		}
	}
	if x.Controller != "" {
		value := protoreflect.ValueOfString(x.Controller)
		if !f(fd_TrustRegistry_controller, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_TrustRegistry_created, value) {
			return
		}
	}
	if x.Modified != nil {
		value := protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
		if !f(fd_TrustRegistry_modified, value) {
			return
		}
	}
	if x.Archived != nil {
		value := protoreflect.ValueOfMessage(x.Archived.ProtoReflect())
		if !f(fd_TrustRegistry_archived, value) {
			return
		}
	}
	if x.Deposit != int64(0) {
		value := protoreflect.ValueOfInt64(x.Deposit)
		if !f(fd_TrustRegistry_deposit, value) {
			return
		}
	}
	if x.Aka != "" {
		value := protoreflect.ValueOfString(x.Aka)
		if !f(fd_TrustRegistry_aka, value) {
			return
		}
	}
	if x.ActiveVersion != int32(0) {
		value := protoreflect.ValueOfInt32(x.ActiveVersion)
		if !f(fd_TrustRegistry_active_version, value) {
			return
		}
	}
	if x.Language != "" {
		value := protoreflect.ValueOfString(x.Language)
		if !f(fd_TrustRegistry_language, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TrustRegistry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.id":
		return x.Id != uint64(0)
	case "veranablockchain.trustregistry.TrustRegistry.did":
		return x.Did != ""
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		return x.Controller != ""
	case "veranablockchain.trustregistry.TrustRegistry.created":
		return x.Created != nil
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		return x.Modified != nil
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		return x.Archived != nil
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		return x.Deposit != int64(0)
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		return x.Aka != ""
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		return x.ActiveVersion != int32(0)
	case "veranablockchain.trustregistry.TrustRegistry.language":
		return x.Language != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.id":
		x.Id = uint64(0)
	case "veranablockchain.trustregistry.TrustRegistry.did":
		x.Did = ""
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		x.Controller = ""
	case "veranablockchain.trustregistry.TrustRegistry.created":
		x.Created = nil
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		x.Modified = nil
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		x.Archived = nil
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		x.Deposit = int64(0)
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		x.Aka = ""
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		x.ActiveVersion = int32(0)
	case "veranablockchain.trustregistry.TrustRegistry.language":
		x.Language = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TrustRegistry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.TrustRegistry.did":
		value := x.Did
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		value := x.Controller
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistry.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		value := x.Modified
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		value := x.Archived
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		value := x.Deposit
		return protoreflect.ValueOfInt64(value)
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		value := x.Aka
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		value := x.ActiveVersion
		return protoreflect.ValueOfInt32(value)
	case "veranablockchain.trustregistry.TrustRegistry.language":
		value := x.Language
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.id":
		x.Id = value.Uint()
	case "veranablockchain.trustregistry.TrustRegistry.did":
		x.Did = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		x.Controller = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistry.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		x.Modified = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		x.Archived = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		x.Deposit = value.Int()
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		x.Aka = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		x.ActiveVersion = int32(value.Int())
	case "veranablockchain.trustregistry.TrustRegistry.language":
		x.Language = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		if x.Modified == nil {
			x.Modified = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		if x.Archived == nil {
			x.Archived = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Archived.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.id":
		panic(fmt.Errorf("field id of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.did":
		panic(fmt.Errorf("field did of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		panic(fmt.Errorf("field controller of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		panic(fmt.Errorf("field deposit of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		panic(fmt.Errorf("field aka of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		panic(fmt.Errorf("field active_version of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistry.language":
		panic(fmt.Errorf("field language of message veranablockchain.trustregistry.TrustRegistry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TrustRegistry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistry.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.TrustRegistry.did":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistry.controller":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistry.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.modified":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.archived":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistry.deposit":
		return protoreflect.ValueOfInt64(int64(0))
	case "veranablockchain.trustregistry.TrustRegistry.aka":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistry.active_version":
		return protoreflect.ValueOfInt32(int32(0))
	case "veranablockchain.trustregistry.TrustRegistry.language":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistry"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TrustRegistry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.trustregistry.TrustRegistry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TrustRegistry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TrustRegistry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TrustRegistry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Did)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Controller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Modified != nil {
			l = options.Size(x.Modified)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Archived != nil {
			l = options.Size(x.Archived)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != 0 {
			n += 1 + runtime.Sov(uint64(x.Deposit))
		}
		l = len(x.Aka)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ActiveVersion != 0 {
			n += 1 + runtime.Sov(uint64(x.ActiveVersion))
		}
		l = len(x.Language)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Language) > 0 {
			i -= len(x.Language)
			copy(dAtA[i:], x.Language)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Language)))
			i--
			dAtA[i] = 0x52
		}
		if x.ActiveVersion != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActiveVersion))
			i--
			dAtA[i] = 0x48
		}
		if len(x.Aka) > 0 {
			i -= len(x.Aka)
			copy(dAtA[i:], x.Aka)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Aka)))
			i--
			dAtA[i] = 0x42
		}
		if x.Deposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Deposit))
			i--
			dAtA[i] = 0x38
		}
		if x.Archived != nil {
			encoded, err := options.Marshal(x.Archived)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.Modified != nil {
			encoded, err := options.Marshal(x.Modified)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Controller) > 0 {
			i -= len(x.Controller)
			copy(dAtA[i:], x.Controller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Did) > 0 {
			i -= len(x.Did)
			copy(dAtA[i:], x.Did)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Did)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Did = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Modified == nil {
					x.Modified = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Modified); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Archived", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Archived == nil {
					x.Archived = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Archived); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				x.Deposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Deposit |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aka", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Aka = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveVersion", wireType)
				}
				x.ActiveVersion = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActiveVersion |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Language = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GovernanceFrameworkVersion              protoreflect.MessageDescriptor
	fd_GovernanceFrameworkVersion_id           protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_tr_id        protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_created      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_version      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersion_active_since protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_trustregistry_types_proto_init()
	md_GovernanceFrameworkVersion = File_veranablockchain_trustregistry_types_proto.Messages().ByName("GovernanceFrameworkVersion")
	fd_GovernanceFrameworkVersion_id = md_GovernanceFrameworkVersion.Fields().ByName("id")
	fd_GovernanceFrameworkVersion_tr_id = md_GovernanceFrameworkVersion.Fields().ByName("tr_id")
	fd_GovernanceFrameworkVersion_created = md_GovernanceFrameworkVersion.Fields().ByName("created")
	fd_GovernanceFrameworkVersion_version = md_GovernanceFrameworkVersion.Fields().ByName("version")
	fd_GovernanceFrameworkVersion_active_since = md_GovernanceFrameworkVersion.Fields().ByName("active_since")
}

var _ protoreflect.Message = (*fastReflection_GovernanceFrameworkVersion)(nil)

type fastReflection_GovernanceFrameworkVersion GovernanceFrameworkVersion

func (x *GovernanceFrameworkVersion) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersion)(x)
}

func (x *GovernanceFrameworkVersion) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GovernanceFrameworkVersion_messageType fastReflection_GovernanceFrameworkVersion_messageType
var _ protoreflect.MessageType = fastReflection_GovernanceFrameworkVersion_messageType{}

type fastReflection_GovernanceFrameworkVersion_messageType struct{}

func (x fastReflection_GovernanceFrameworkVersion_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersion)(nil)
}
func (x fastReflection_GovernanceFrameworkVersion_messageType) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersion)
}
func (x fastReflection_GovernanceFrameworkVersion_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersion
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GovernanceFrameworkVersion) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersion
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GovernanceFrameworkVersion) Type() protoreflect.MessageType {
	return _fastReflection_GovernanceFrameworkVersion_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GovernanceFrameworkVersion) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersion)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GovernanceFrameworkVersion) Interface() protoreflect.ProtoMessage {
	return (*GovernanceFrameworkVersion)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GovernanceFrameworkVersion) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_GovernanceFrameworkVersion_id, value) {
			return
		}
	}
	if x.TrId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TrId)
		if !f(fd_GovernanceFrameworkVersion_tr_id, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersion_created, value) {
			return
		}
	}
	if x.Version != int32(0) {
		value := protoreflect.ValueOfInt32(x.Version)
		if !f(fd_GovernanceFrameworkVersion_version, value) {
			return
		}
	}
	if x.ActiveSince != nil {
		value := protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersion_active_since, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GovernanceFrameworkVersion) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		return x.Id != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		return x.TrId != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		return x.Created != nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		return x.Version != int32(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		return x.ActiveSince != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		x.Id = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		x.TrId = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		x.Created = nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		x.Version = int32(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		x.ActiveSince = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GovernanceFrameworkVersion) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		value := x.TrId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		value := x.Version
		return protoreflect.ValueOfInt32(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		value := x.ActiveSince
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		x.Id = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		x.TrId = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		x.Version = int32(value.Int())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		x.ActiveSince = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		if x.ActiveSince == nil {
			x.ActiveSince = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		panic(fmt.Errorf("field id of message veranablockchain.trustregistry.GovernanceFrameworkVersion is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		panic(fmt.Errorf("field tr_id of message veranablockchain.trustregistry.GovernanceFrameworkVersion is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		panic(fmt.Errorf("field version of message veranablockchain.trustregistry.GovernanceFrameworkVersion is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GovernanceFrameworkVersion) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.tr_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.version":
		return protoreflect.ValueOfInt32(int32(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersion"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersion does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GovernanceFrameworkVersion) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.trustregistry.GovernanceFrameworkVersion", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GovernanceFrameworkVersion) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersion) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GovernanceFrameworkVersion) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GovernanceFrameworkVersion) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.TrId != 0 {
			n += 1 + runtime.Sov(uint64(x.TrId))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.ActiveSince != nil {
			l = options.Size(x.ActiveSince)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ActiveSince != nil {
			encoded, err := options.Marshal(x.ActiveSince)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x20
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TrId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TrId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersion)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersion: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersion: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrId", wireType)
				}
				x.TrId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TrId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveSince", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ActiveSince == nil {
					x.ActiveSince = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActiveSince); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GovernanceFrameworkDocument            protoreflect.MessageDescriptor
	fd_GovernanceFrameworkDocument_id         protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_gfv_id     protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_created    protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_language   protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_url        protoreflect.FieldDescriptor
	fd_GovernanceFrameworkDocument_digest_sri protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_trustregistry_types_proto_init()
	md_GovernanceFrameworkDocument = File_veranablockchain_trustregistry_types_proto.Messages().ByName("GovernanceFrameworkDocument")
	fd_GovernanceFrameworkDocument_id = md_GovernanceFrameworkDocument.Fields().ByName("id")
	fd_GovernanceFrameworkDocument_gfv_id = md_GovernanceFrameworkDocument.Fields().ByName("gfv_id")
	fd_GovernanceFrameworkDocument_created = md_GovernanceFrameworkDocument.Fields().ByName("created")
	fd_GovernanceFrameworkDocument_language = md_GovernanceFrameworkDocument.Fields().ByName("language")
	fd_GovernanceFrameworkDocument_url = md_GovernanceFrameworkDocument.Fields().ByName("url")
	fd_GovernanceFrameworkDocument_digest_sri = md_GovernanceFrameworkDocument.Fields().ByName("digest_sri")
}

var _ protoreflect.Message = (*fastReflection_GovernanceFrameworkDocument)(nil)

type fastReflection_GovernanceFrameworkDocument GovernanceFrameworkDocument

func (x *GovernanceFrameworkDocument) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkDocument)(x)
}

func (x *GovernanceFrameworkDocument) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GovernanceFrameworkDocument_messageType fastReflection_GovernanceFrameworkDocument_messageType
var _ protoreflect.MessageType = fastReflection_GovernanceFrameworkDocument_messageType{}

type fastReflection_GovernanceFrameworkDocument_messageType struct{}

func (x fastReflection_GovernanceFrameworkDocument_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkDocument)(nil)
}
func (x fastReflection_GovernanceFrameworkDocument_messageType) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkDocument)
}
func (x fastReflection_GovernanceFrameworkDocument_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkDocument
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GovernanceFrameworkDocument) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkDocument
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GovernanceFrameworkDocument) Type() protoreflect.MessageType {
	return _fastReflection_GovernanceFrameworkDocument_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GovernanceFrameworkDocument) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkDocument)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GovernanceFrameworkDocument) Interface() protoreflect.ProtoMessage {
	return (*GovernanceFrameworkDocument)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GovernanceFrameworkDocument) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_GovernanceFrameworkDocument_id, value) {
			return
		}
	}
	if x.GfvId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GfvId)
		if !f(fd_GovernanceFrameworkDocument_gfv_id, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_GovernanceFrameworkDocument_created, value) {
			return
		}
	}
	if x.Language != "" {
		value := protoreflect.ValueOfString(x.Language)
		if !f(fd_GovernanceFrameworkDocument_language, value) {
			return
		}
	}
	if x.Url != "" {
		value := protoreflect.ValueOfString(x.Url)
		if !f(fd_GovernanceFrameworkDocument_url, value) {
			return
		}
	}
	if x.DigestSri != "" {
		value := protoreflect.ValueOfString(x.DigestSri)
		if !f(fd_GovernanceFrameworkDocument_digest_sri, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GovernanceFrameworkDocument) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		return x.Id != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		return x.GfvId != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		return x.Created != nil
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		return x.Language != ""
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		return x.Url != ""
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		return x.DigestSri != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		x.Id = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		x.GfvId = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		x.Created = nil
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		x.Language = ""
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		x.Url = ""
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		x.DigestSri = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GovernanceFrameworkDocument) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		value := x.GfvId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		value := x.Language
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		value := x.Url
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		value := x.DigestSri
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		x.Id = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		x.GfvId = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		x.Language = value.Interface().(string)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		x.Url = value.Interface().(string)
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		x.DigestSri = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		panic(fmt.Errorf("field id of message veranablockchain.trustregistry.GovernanceFrameworkDocument is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		panic(fmt.Errorf("field gfv_id of message veranablockchain.trustregistry.GovernanceFrameworkDocument is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		panic(fmt.Errorf("field language of message veranablockchain.trustregistry.GovernanceFrameworkDocument is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		panic(fmt.Errorf("field url of message veranablockchain.trustregistry.GovernanceFrameworkDocument is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		panic(fmt.Errorf("field digest_sri of message veranablockchain.trustregistry.GovernanceFrameworkDocument is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GovernanceFrameworkDocument) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.gfv_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.language":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.url":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.GovernanceFrameworkDocument.digest_sri":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkDocument"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkDocument does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GovernanceFrameworkDocument) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.trustregistry.GovernanceFrameworkDocument", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GovernanceFrameworkDocument) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkDocument) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GovernanceFrameworkDocument) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GovernanceFrameworkDocument) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.GfvId != 0 {
			n += 1 + runtime.Sov(uint64(x.GfvId))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Language)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Url)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DigestSri)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DigestSri) > 0 {
			i -= len(x.DigestSri)
			copy(dAtA[i:], x.DigestSri)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DigestSri)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Url) > 0 {
			i -= len(x.Url)
			copy(dAtA[i:], x.Url)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Url)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Language) > 0 {
			i -= len(x.Language)
			copy(dAtA[i:], x.Language)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Language)))
			i--
			dAtA[i] = 0x22
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.GfvId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GfvId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkDocument)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkDocument: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkDocument: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GfvId", wireType)
				}
				x.GfvId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GfvId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Language = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Url = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DigestSri", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DigestSri = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GovernanceFrameworkVersionWithDocs_6_list)(nil)

type _GovernanceFrameworkVersionWithDocs_6_list struct {
	list *[]*GovernanceFrameworkDocument
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*GovernanceFrameworkDocument)
	(*x.list)[i] = concreteValue
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*GovernanceFrameworkDocument)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) AppendMutable() protoreflect.Value {
	v := new(GovernanceFrameworkDocument)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) NewElement() protoreflect.Value {
	v := new(GovernanceFrameworkDocument)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GovernanceFrameworkVersionWithDocs_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GovernanceFrameworkVersionWithDocs              protoreflect.MessageDescriptor
	fd_GovernanceFrameworkVersionWithDocs_id           protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersionWithDocs_tr_id        protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersionWithDocs_created      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersionWithDocs_version      protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersionWithDocs_active_since protoreflect.FieldDescriptor
	fd_GovernanceFrameworkVersionWithDocs_documents    protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_trustregistry_types_proto_init()
	md_GovernanceFrameworkVersionWithDocs = File_veranablockchain_trustregistry_types_proto.Messages().ByName("GovernanceFrameworkVersionWithDocs")
	fd_GovernanceFrameworkVersionWithDocs_id = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("id")
	fd_GovernanceFrameworkVersionWithDocs_tr_id = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("tr_id")
	fd_GovernanceFrameworkVersionWithDocs_created = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("created")
	fd_GovernanceFrameworkVersionWithDocs_version = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("version")
	fd_GovernanceFrameworkVersionWithDocs_active_since = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("active_since")
	fd_GovernanceFrameworkVersionWithDocs_documents = md_GovernanceFrameworkVersionWithDocs.Fields().ByName("documents")
}

var _ protoreflect.Message = (*fastReflection_GovernanceFrameworkVersionWithDocs)(nil)

type fastReflection_GovernanceFrameworkVersionWithDocs GovernanceFrameworkVersionWithDocs

func (x *GovernanceFrameworkVersionWithDocs) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersionWithDocs)(x)
}

func (x *GovernanceFrameworkVersionWithDocs) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GovernanceFrameworkVersionWithDocs_messageType fastReflection_GovernanceFrameworkVersionWithDocs_messageType
var _ protoreflect.MessageType = fastReflection_GovernanceFrameworkVersionWithDocs_messageType{}

type fastReflection_GovernanceFrameworkVersionWithDocs_messageType struct{}

func (x fastReflection_GovernanceFrameworkVersionWithDocs_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GovernanceFrameworkVersionWithDocs)(nil)
}
func (x fastReflection_GovernanceFrameworkVersionWithDocs_messageType) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersionWithDocs)
}
func (x fastReflection_GovernanceFrameworkVersionWithDocs_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersionWithDocs
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Descriptor() protoreflect.MessageDescriptor {
	return md_GovernanceFrameworkVersionWithDocs
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Type() protoreflect.MessageType {
	return _fastReflection_GovernanceFrameworkVersionWithDocs_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) New() protoreflect.Message {
	return new(fastReflection_GovernanceFrameworkVersionWithDocs)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Interface() protoreflect.ProtoMessage {
	return (*GovernanceFrameworkVersionWithDocs)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_GovernanceFrameworkVersionWithDocs_id, value) {
			return
		}
	}
	if x.TrId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TrId)
		if !f(fd_GovernanceFrameworkVersionWithDocs_tr_id, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersionWithDocs_created, value) {
			return
		}
	}
	if x.Version != int32(0) {
		value := protoreflect.ValueOfInt32(x.Version)
		if !f(fd_GovernanceFrameworkVersionWithDocs_version, value) {
			return
		}
	}
	if x.ActiveSince != nil {
		value := protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
		if !f(fd_GovernanceFrameworkVersionWithDocs_active_since, value) {
			return
		}
	}
	if len(x.Documents) != 0 {
		value := protoreflect.ValueOfList(&_GovernanceFrameworkVersionWithDocs_6_list{list: &x.Documents})
		if !f(fd_GovernanceFrameworkVersionWithDocs_documents, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		return x.Id != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		return x.TrId != uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		return x.Created != nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		return x.Version != int32(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		return x.ActiveSince != nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		return len(x.Documents) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		x.Id = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		x.TrId = uint64(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		x.Created = nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		x.Version = int32(0)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		x.ActiveSince = nil
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		x.Documents = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		value := x.TrId
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		value := x.Version
		return protoreflect.ValueOfInt32(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		value := x.ActiveSince
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		if len(x.Documents) == 0 {
			return protoreflect.ValueOfList(&_GovernanceFrameworkVersionWithDocs_6_list{})
		}
		listValue := &_GovernanceFrameworkVersionWithDocs_6_list{list: &x.Documents}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		x.Id = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		x.TrId = value.Uint()
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		x.Version = int32(value.Int())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		x.ActiveSince = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		lv := value.List()
		clv := lv.(*_GovernanceFrameworkVersionWithDocs_6_list)
		x.Documents = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		if x.ActiveSince == nil {
			x.ActiveSince = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.ActiveSince.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		if x.Documents == nil {
			x.Documents = []*GovernanceFrameworkDocument{}
		}
		value := &_GovernanceFrameworkVersionWithDocs_6_list{list: &x.Documents}
		return protoreflect.ValueOfList(value)
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		panic(fmt.Errorf("field id of message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		panic(fmt.Errorf("field tr_id of message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs is not mutable"))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		panic(fmt.Errorf("field version of message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.tr_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.version":
		return protoreflect.ValueOfInt32(int32(0))
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents":
		list := []*GovernanceFrameworkDocument{}
		return protoreflect.ValueOfList(&_GovernanceFrameworkVersionWithDocs_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GovernanceFrameworkVersionWithDocs) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GovernanceFrameworkVersionWithDocs)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.TrId != 0 {
			n += 1 + runtime.Sov(uint64(x.TrId))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.ActiveSince != nil {
			l = options.Size(x.ActiveSince)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Documents) > 0 {
			for _, e := range x.Documents {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersionWithDocs)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Documents) > 0 {
			for iNdEx := len(x.Documents) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Documents[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.ActiveSince != nil {
			encoded, err := options.Marshal(x.ActiveSince)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x20
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TrId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TrId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GovernanceFrameworkVersionWithDocs)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersionWithDocs: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GovernanceFrameworkVersionWithDocs: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrId", wireType)
				}
				x.TrId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TrId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveSince", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ActiveSince == nil {
					x.ActiveSince = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ActiveSince); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Documents", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Documents = append(x.Documents, &GovernanceFrameworkDocument{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Documents[len(x.Documents)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_TrustRegistryWithVersions_11_list)(nil)

type _TrustRegistryWithVersions_11_list struct {
	list *[]*GovernanceFrameworkVersionWithDocs
}

func (x *_TrustRegistryWithVersions_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_TrustRegistryWithVersions_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_TrustRegistryWithVersions_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*GovernanceFrameworkVersionWithDocs)
	(*x.list)[i] = concreteValue
}

func (x *_TrustRegistryWithVersions_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*GovernanceFrameworkVersionWithDocs)
	*x.list = append(*x.list, concreteValue)
}

func (x *_TrustRegistryWithVersions_11_list) AppendMutable() protoreflect.Value {
	v := new(GovernanceFrameworkVersionWithDocs)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TrustRegistryWithVersions_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_TrustRegistryWithVersions_11_list) NewElement() protoreflect.Value {
	v := new(GovernanceFrameworkVersionWithDocs)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_TrustRegistryWithVersions_11_list) IsValid() bool {
	return x.list != nil
}

var (
	md_TrustRegistryWithVersions                protoreflect.MessageDescriptor
	fd_TrustRegistryWithVersions_id             protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_did            protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_controller     protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_created        protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_modified       protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_archived       protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_deposit        protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_aka            protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_active_version protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_language       protoreflect.FieldDescriptor
	fd_TrustRegistryWithVersions_versions       protoreflect.FieldDescriptor
)

func init() {
	file_veranablockchain_trustregistry_types_proto_init()
	md_TrustRegistryWithVersions = File_veranablockchain_trustregistry_types_proto.Messages().ByName("TrustRegistryWithVersions")
	fd_TrustRegistryWithVersions_id = md_TrustRegistryWithVersions.Fields().ByName("id")
	fd_TrustRegistryWithVersions_did = md_TrustRegistryWithVersions.Fields().ByName("did")
	fd_TrustRegistryWithVersions_controller = md_TrustRegistryWithVersions.Fields().ByName("controller")
	fd_TrustRegistryWithVersions_created = md_TrustRegistryWithVersions.Fields().ByName("created")
	fd_TrustRegistryWithVersions_modified = md_TrustRegistryWithVersions.Fields().ByName("modified")
	fd_TrustRegistryWithVersions_archived = md_TrustRegistryWithVersions.Fields().ByName("archived")
	fd_TrustRegistryWithVersions_deposit = md_TrustRegistryWithVersions.Fields().ByName("deposit")
	fd_TrustRegistryWithVersions_aka = md_TrustRegistryWithVersions.Fields().ByName("aka")
	fd_TrustRegistryWithVersions_active_version = md_TrustRegistryWithVersions.Fields().ByName("active_version")
	fd_TrustRegistryWithVersions_language = md_TrustRegistryWithVersions.Fields().ByName("language")
	fd_TrustRegistryWithVersions_versions = md_TrustRegistryWithVersions.Fields().ByName("versions")
}

var _ protoreflect.Message = (*fastReflection_TrustRegistryWithVersions)(nil)

type fastReflection_TrustRegistryWithVersions TrustRegistryWithVersions

func (x *TrustRegistryWithVersions) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TrustRegistryWithVersions)(x)
}

func (x *TrustRegistryWithVersions) slowProtoReflect() protoreflect.Message {
	mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TrustRegistryWithVersions_messageType fastReflection_TrustRegistryWithVersions_messageType
var _ protoreflect.MessageType = fastReflection_TrustRegistryWithVersions_messageType{}

type fastReflection_TrustRegistryWithVersions_messageType struct{}

func (x fastReflection_TrustRegistryWithVersions_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TrustRegistryWithVersions)(nil)
}
func (x fastReflection_TrustRegistryWithVersions_messageType) New() protoreflect.Message {
	return new(fastReflection_TrustRegistryWithVersions)
}
func (x fastReflection_TrustRegistryWithVersions_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistryWithVersions
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TrustRegistryWithVersions) Descriptor() protoreflect.MessageDescriptor {
	return md_TrustRegistryWithVersions
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TrustRegistryWithVersions) Type() protoreflect.MessageType {
	return _fastReflection_TrustRegistryWithVersions_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TrustRegistryWithVersions) New() protoreflect.Message {
	return new(fastReflection_TrustRegistryWithVersions)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TrustRegistryWithVersions) Interface() protoreflect.ProtoMessage {
	return (*TrustRegistryWithVersions)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TrustRegistryWithVersions) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_TrustRegistryWithVersions_id, value) {
			return
		}
	}
	if x.Did != "" {
		value := protoreflect.ValueOfString(x.Did)
		if !f(fd_TrustRegistryWithVersions_did, value) {
			return
		}
	}
	if x.Controller != "" {
		value := protoreflect.ValueOfString(x.Controller)
		if !f(fd_TrustRegistryWithVersions_controller, value) {
			return
		}
	}
	if x.Created != nil {
		value := protoreflect.ValueOfMessage(x.Created.ProtoReflect())
		if !f(fd_TrustRegistryWithVersions_created, value) {
			return
		}
	}
	if x.Modified != nil {
		value := protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
		if !f(fd_TrustRegistryWithVersions_modified, value) {
			return
		}
	}
	if x.Archived != nil {
		value := protoreflect.ValueOfMessage(x.Archived.ProtoReflect())
		if !f(fd_TrustRegistryWithVersions_archived, value) {
			return
		}
	}
	if x.Deposit != int64(0) {
		value := protoreflect.ValueOfInt64(x.Deposit)
		if !f(fd_TrustRegistryWithVersions_deposit, value) {
			return
		}
	}
	if x.Aka != "" {
		value := protoreflect.ValueOfString(x.Aka)
		if !f(fd_TrustRegistryWithVersions_aka, value) {
			return
		}
	}
	if x.ActiveVersion != int32(0) {
		value := protoreflect.ValueOfInt32(x.ActiveVersion)
		if !f(fd_TrustRegistryWithVersions_active_version, value) {
			return
		}
	}
	if x.Language != "" {
		value := protoreflect.ValueOfString(x.Language)
		if !f(fd_TrustRegistryWithVersions_language, value) {
			return
		}
	}
	if len(x.Versions) != 0 {
		value := protoreflect.ValueOfList(&_TrustRegistryWithVersions_11_list{list: &x.Versions})
		if !f(fd_TrustRegistryWithVersions_versions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TrustRegistryWithVersions) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		return x.Id != uint64(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		return x.Did != ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		return x.Controller != ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		return x.Created != nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		return x.Modified != nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		return x.Archived != nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		return x.Deposit != int64(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		return x.Aka != ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		return x.ActiveVersion != int32(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		return x.Language != ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		return len(x.Versions) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistryWithVersions) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		x.Id = uint64(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		x.Did = ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		x.Controller = ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		x.Created = nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		x.Modified = nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		x.Archived = nil
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		x.Deposit = int64(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		x.Aka = ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		x.ActiveVersion = int32(0)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		x.Language = ""
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		x.Versions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TrustRegistryWithVersions) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		value := x.Did
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		value := x.Controller
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		value := x.Created
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		value := x.Modified
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		value := x.Archived
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		value := x.Deposit
		return protoreflect.ValueOfInt64(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		value := x.Aka
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		value := x.ActiveVersion
		return protoreflect.ValueOfInt32(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		value := x.Language
		return protoreflect.ValueOfString(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		if len(x.Versions) == 0 {
			return protoreflect.ValueOfList(&_TrustRegistryWithVersions_11_list{})
		}
		listValue := &_TrustRegistryWithVersions_11_list{list: &x.Versions}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistryWithVersions) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		x.Id = value.Uint()
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		x.Did = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		x.Controller = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		x.Created = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		x.Modified = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		x.Archived = value.Message().Interface().(*timestamppb.Timestamp)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		x.Deposit = value.Int()
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		x.Aka = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		x.ActiveVersion = int32(value.Int())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		x.Language = value.Interface().(string)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		lv := value.List()
		clv := lv.(*_TrustRegistryWithVersions_11_list)
		x.Versions = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistryWithVersions) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		if x.Created == nil {
			x.Created = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Created.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		if x.Modified == nil {
			x.Modified = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Modified.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		if x.Archived == nil {
			x.Archived = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Archived.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		if x.Versions == nil {
			x.Versions = []*GovernanceFrameworkVersionWithDocs{}
		}
		value := &_TrustRegistryWithVersions_11_list{list: &x.Versions}
		return protoreflect.ValueOfList(value)
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		panic(fmt.Errorf("field id of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		panic(fmt.Errorf("field did of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		panic(fmt.Errorf("field controller of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		panic(fmt.Errorf("field deposit of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		panic(fmt.Errorf("field aka of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		panic(fmt.Errorf("field active_version of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		panic(fmt.Errorf("field language of message veranablockchain.trustregistry.TrustRegistryWithVersions is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TrustRegistryWithVersions) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.did":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.controller":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.created":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.modified":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.archived":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.deposit":
		return protoreflect.ValueOfInt64(int64(0))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.aka":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.active_version":
		return protoreflect.ValueOfInt32(int32(0))
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.language":
		return protoreflect.ValueOfString("")
	case "veranablockchain.trustregistry.TrustRegistryWithVersions.versions":
		list := []*GovernanceFrameworkVersionWithDocs{}
		return protoreflect.ValueOfList(&_TrustRegistryWithVersions_11_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: veranablockchain.trustregistry.TrustRegistryWithVersions"))
		}
		panic(fmt.Errorf("message veranablockchain.trustregistry.TrustRegistryWithVersions does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TrustRegistryWithVersions) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in veranablockchain.trustregistry.TrustRegistryWithVersions", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TrustRegistryWithVersions) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TrustRegistryWithVersions) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TrustRegistryWithVersions) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TrustRegistryWithVersions) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TrustRegistryWithVersions)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Did)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Controller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Created != nil {
			l = options.Size(x.Created)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Modified != nil {
			l = options.Size(x.Modified)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Archived != nil {
			l = options.Size(x.Archived)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Deposit != 0 {
			n += 1 + runtime.Sov(uint64(x.Deposit))
		}
		l = len(x.Aka)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ActiveVersion != 0 {
			n += 1 + runtime.Sov(uint64(x.ActiveVersion))
		}
		l = len(x.Language)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Versions) > 0 {
			for _, e := range x.Versions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistryWithVersions)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Versions) > 0 {
			for iNdEx := len(x.Versions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Versions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.Language) > 0 {
			i -= len(x.Language)
			copy(dAtA[i:], x.Language)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Language)))
			i--
			dAtA[i] = 0x52
		}
		if x.ActiveVersion != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActiveVersion))
			i--
			dAtA[i] = 0x48
		}
		if len(x.Aka) > 0 {
			i -= len(x.Aka)
			copy(dAtA[i:], x.Aka)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Aka)))
			i--
			dAtA[i] = 0x42
		}
		if x.Deposit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Deposit))
			i--
			dAtA[i] = 0x38
		}
		if x.Archived != nil {
			encoded, err := options.Marshal(x.Archived)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.Modified != nil {
			encoded, err := options.Marshal(x.Modified)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Created != nil {
			encoded, err := options.Marshal(x.Created)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Controller) > 0 {
			i -= len(x.Controller)
			copy(dAtA[i:], x.Controller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Did) > 0 {
			i -= len(x.Did)
			copy(dAtA[i:], x.Did)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Did)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TrustRegistryWithVersions)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistryWithVersions: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TrustRegistryWithVersions: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Did = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Created == nil {
					x.Created = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Created); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Modified", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Modified == nil {
					x.Modified = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Modified); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Archived", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Archived == nil {
					x.Archived = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Archived); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				x.Deposit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Deposit |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Aka", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Aka = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActiveVersion", wireType)
				}
				x.ActiveVersion = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActiveVersion |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Language = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Versions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Versions = append(x.Versions, &GovernanceFrameworkVersionWithDocs{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Versions[len(x.Versions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: veranablockchain/trustregistry/types.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrustRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Added id field
	Did           string                 `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Controller    string                 `protobuf:"bytes,3,opt,name=controller,proto3" json:"controller,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Archived      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=archived,proto3" json:"archived,omitempty"`
	Deposit       int64                  `protobuf:"varint,7,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Aka           string                 `protobuf:"bytes,8,opt,name=aka,proto3" json:"aka,omitempty"`
	ActiveVersion int32                  `protobuf:"varint,9,opt,name=active_version,json=activeVersion,proto3" json:"active_version,omitempty"`
	Language      string                 `protobuf:"bytes,10,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *TrustRegistry) Reset() {
	*x = TrustRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustRegistry) ProtoMessage() {}

// Deprecated: Use TrustRegistry.ProtoReflect.Descriptor instead.
func (*TrustRegistry) Descriptor() ([]byte, []int) {
	return file_veranablockchain_trustregistry_types_proto_rawDescGZIP(), []int{0}
}

func (x *TrustRegistry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TrustRegistry) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *TrustRegistry) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *TrustRegistry) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TrustRegistry) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TrustRegistry) GetArchived() *timestamppb.Timestamp {
	if x != nil {
		return x.Archived
	}
	return nil
}

func (x *TrustRegistry) GetDeposit() int64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *TrustRegistry) GetAka() string {
	if x != nil {
		return x.Aka
	}
	return ""
}

func (x *TrustRegistry) GetActiveVersion() int32 {
	if x != nil {
		return x.ActiveVersion
	}
	return 0
}

func (x *TrustRegistry) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GovernanceFrameworkVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // Changed from string to uint64
	TrId        uint64                 `protobuf:"varint,2,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"` // Changed from tr_did to tr_id
	Created     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Version     int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ActiveSince *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=active_since,json=activeSince,proto3" json:"active_since,omitempty"`
}

func (x *GovernanceFrameworkVersion) Reset() {
	*x = GovernanceFrameworkVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFrameworkVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFrameworkVersion) ProtoMessage() {}

// Deprecated: Use GovernanceFrameworkVersion.ProtoReflect.Descriptor instead.
func (*GovernanceFrameworkVersion) Descriptor() ([]byte, []int) {
	return file_veranablockchain_trustregistry_types_proto_rawDescGZIP(), []int{1}
}

func (x *GovernanceFrameworkVersion) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GovernanceFrameworkVersion) GetTrId() uint64 {
	if x != nil {
		return x.TrId
	}
	return 0
}

func (x *GovernanceFrameworkVersion) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GovernanceFrameworkVersion) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GovernanceFrameworkVersion) GetActiveSince() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveSince
	}
	return nil
}

type GovernanceFrameworkDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    // Changed from string to uint64
	GfvId     uint64                 `protobuf:"varint,2,opt,name=gfv_id,json=gfvId,proto3" json:"gfv_id,omitempty"` // Changed from string to uint64
	Created   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Language  string                 `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Url       string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	DigestSri string                 `protobuf:"bytes,6,opt,name=digest_sri,json=digestSri,proto3" json:"digest_sri,omitempty"`
}

func (x *GovernanceFrameworkDocument) Reset() {
	*x = GovernanceFrameworkDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFrameworkDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFrameworkDocument) ProtoMessage() {}

// Deprecated: Use GovernanceFrameworkDocument.ProtoReflect.Descriptor instead.
func (*GovernanceFrameworkDocument) Descriptor() ([]byte, []int) {
	return file_veranablockchain_trustregistry_types_proto_rawDescGZIP(), []int{2}
}

func (x *GovernanceFrameworkDocument) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GovernanceFrameworkDocument) GetGfvId() uint64 {
	if x != nil {
		return x.GfvId
	}
	return 0
}

func (x *GovernanceFrameworkDocument) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GovernanceFrameworkDocument) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GovernanceFrameworkDocument) GetDigestSri() string {
	if x != nil {
		return x.DigestSri
	}
	return ""
}

// GovernanceFrameworkVersionWithDocs extends GovernanceFrameworkVersion to include its documents
type GovernanceFrameworkVersionWithDocs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TrId        uint64                         `protobuf:"varint,2,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Created     *timestamppb.Timestamp         `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Version     int32                          `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ActiveSince *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=active_since,json=activeSince,proto3" json:"active_since,omitempty"`
	Documents   []*GovernanceFrameworkDocument `protobuf:"bytes,6,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *GovernanceFrameworkVersionWithDocs) Reset() {
	*x = GovernanceFrameworkVersionWithDocs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFrameworkVersionWithDocs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFrameworkVersionWithDocs) ProtoMessage() {}

// Deprecated: Use GovernanceFrameworkVersionWithDocs.ProtoReflect.Descriptor instead.
func (*GovernanceFrameworkVersionWithDocs) Descriptor() ([]byte, []int) {
	return file_veranablockchain_trustregistry_types_proto_rawDescGZIP(), []int{3}
}

func (x *GovernanceFrameworkVersionWithDocs) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GovernanceFrameworkVersionWithDocs) GetTrId() uint64 {
	if x != nil {
		return x.TrId
	}
	return 0
}

func (x *GovernanceFrameworkVersionWithDocs) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GovernanceFrameworkVersionWithDocs) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GovernanceFrameworkVersionWithDocs) GetActiveSince() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveSince
	}
	return nil
}

func (x *GovernanceFrameworkVersionWithDocs) GetDocuments() []*GovernanceFrameworkDocument {
	if x != nil {
		return x.Documents
	}
	return nil
}

// TrustRegistryWithVersions extends TrustRegistry to include its versions with nested documents
type TrustRegistryWithVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Did           string                                `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Controller    string                                `protobuf:"bytes,3,opt,name=controller,proto3" json:"controller,omitempty"`
	Created       *timestamppb.Timestamp                `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified      *timestamppb.Timestamp                `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Archived      *timestamppb.Timestamp                `protobuf:"bytes,6,opt,name=archived,proto3" json:"archived,omitempty"`
	Deposit       int64                                 `protobuf:"varint,7,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Aka           string                                `protobuf:"bytes,8,opt,name=aka,proto3" json:"aka,omitempty"`
	ActiveVersion int32                                 `protobuf:"varint,9,opt,name=active_version,json=activeVersion,proto3" json:"active_version,omitempty"`
	Language      string                                `protobuf:"bytes,10,opt,name=language,proto3" json:"language,omitempty"`
	Versions      []*GovernanceFrameworkVersionWithDocs `protobuf:"bytes,11,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *TrustRegistryWithVersions) Reset() {
	*x = TrustRegistryWithVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veranablockchain_trustregistry_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustRegistryWithVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustRegistryWithVersions) ProtoMessage() {}

// Deprecated: Use TrustRegistryWithVersions.ProtoReflect.Descriptor instead.
func (*TrustRegistryWithVersions) Descriptor() ([]byte, []int) {
	return file_veranablockchain_trustregistry_types_proto_rawDescGZIP(), []int{4}
}

func (x *TrustRegistryWithVersions) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TrustRegistryWithVersions) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *TrustRegistryWithVersions) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *TrustRegistryWithVersions) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TrustRegistryWithVersions) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TrustRegistryWithVersions) GetArchived() *timestamppb.Timestamp {
	if x != nil {
		return x.Archived
	}
	return nil
}

func (x *TrustRegistryWithVersions) GetDeposit() int64 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *TrustRegistryWithVersions) GetAka() string {
	if x != nil {
		return x.Aka
	}
	return ""
}

func (x *TrustRegistryWithVersions) GetActiveVersion() int32 {
	if x != nil {
		return x.ActiveVersion
	}
	return 0
}

func (x *TrustRegistryWithVersions) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TrustRegistryWithVersions) GetVersions() []*GovernanceFrameworkVersionWithDocs {
	if x != nil {
		return x.Versions
	}
	return nil
}

var File_veranablockchain_trustregistry_types_proto protoreflect.FileDescriptor

var file_veranablockchain_trustregistry_types_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x76, 0x65,
	0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x1a, 0x11, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9e, 0x03, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde,
	0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x40, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8,
	0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x08, 0xc8, 0xde, 0x1f, 0x01, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x6b, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6b, 0x61, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x1a, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x1b, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x66, 0x76,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x67, 0x66, 0x76, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8,
	0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x53, 0x72, 0x69, 0x22, 0xcd, 0x02,
	0x0a, 0x22, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x6f, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x90, 0x04,
	0x0a, 0x19, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x57,
	0x69, 0x74, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x01, 0x90, 0xdf, 0x1f,
	0x01, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6b, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x6b, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x64, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x76,
	0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x73,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x96, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x76, 0x65,
	0x72, 0x61, 0x6e, 0x61, 0x2d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0xa2, 0x02, 0x03, 0x56, 0x54, 0x58, 0xaa, 0x02, 0x1e, 0x56, 0x65, 0x72, 0x61, 0x6e,
	0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0xca, 0x02, 0x1e, 0x56, 0x65, 0x72, 0x61,
	0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0xe2, 0x02, 0x2a, 0x56, 0x65, 0x72,
	0x61, 0x6e, 0x61, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x56, 0x65, 0x72, 0x61, 0x6e, 0x61,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_veranablockchain_trustregistry_types_proto_rawDescOnce sync.Once
	file_veranablockchain_trustregistry_types_proto_rawDescData = file_veranablockchain_trustregistry_types_proto_rawDesc
)

func file_veranablockchain_trustregistry_types_proto_rawDescGZIP() []byte {
	file_veranablockchain_trustregistry_types_proto_rawDescOnce.Do(func() {
		file_veranablockchain_trustregistry_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_veranablockchain_trustregistry_types_proto_rawDescData)
	})
	return file_veranablockchain_trustregistry_types_proto_rawDescData
}

var file_veranablockchain_trustregistry_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_veranablockchain_trustregistry_types_proto_goTypes = []interface{}{
	(*TrustRegistry)(nil),                      // 0: veranablockchain.trustregistry.TrustRegistry
	(*GovernanceFrameworkVersion)(nil),         // 1: veranablockchain.trustregistry.GovernanceFrameworkVersion
	(*GovernanceFrameworkDocument)(nil),        // 2: veranablockchain.trustregistry.GovernanceFrameworkDocument
	(*GovernanceFrameworkVersionWithDocs)(nil), // 3: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs
	(*TrustRegistryWithVersions)(nil),          // 4: veranablockchain.trustregistry.TrustRegistryWithVersions
	(*timestamppb.Timestamp)(nil),              // 5: google.protobuf.Timestamp
}
var file_veranablockchain_trustregistry_types_proto_depIdxs = []int32{
	5,  // 0: veranablockchain.trustregistry.TrustRegistry.created:type_name -> google.protobuf.Timestamp
	5,  // 1: veranablockchain.trustregistry.TrustRegistry.modified:type_name -> google.protobuf.Timestamp
	5,  // 2: veranablockchain.trustregistry.TrustRegistry.archived:type_name -> google.protobuf.Timestamp
	5,  // 3: veranablockchain.trustregistry.GovernanceFrameworkVersion.created:type_name -> google.protobuf.Timestamp
	5,  // 4: veranablockchain.trustregistry.GovernanceFrameworkVersion.active_since:type_name -> google.protobuf.Timestamp
	5,  // 5: veranablockchain.trustregistry.GovernanceFrameworkDocument.created:type_name -> google.protobuf.Timestamp
	5,  // 6: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.created:type_name -> google.protobuf.Timestamp
	5,  // 7: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.active_since:type_name -> google.protobuf.Timestamp
	2,  // 8: veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs.documents:type_name -> veranablockchain.trustregistry.GovernanceFrameworkDocument
	5,  // 9: veranablockchain.trustregistry.TrustRegistryWithVersions.created:type_name -> google.protobuf.Timestamp
	5,  // 10: veranablockchain.trustregistry.TrustRegistryWithVersions.modified:type_name -> google.protobuf.Timestamp
	5,  // 11: veranablockchain.trustregistry.TrustRegistryWithVersions.archived:type_name -> google.protobuf.Timestamp
	3,  // 12: veranablockchain.trustregistry.TrustRegistryWithVersions.versions:type_name -> veranablockchain.trustregistry.GovernanceFrameworkVersionWithDocs
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_veranablockchain_trustregistry_types_proto_init() }
func file_veranablockchain_trustregistry_types_proto_init() {
	if File_veranablockchain_trustregistry_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_veranablockchain_trustregistry_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veranablockchain_trustregistry_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFrameworkVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veranablockchain_trustregistry_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFrameworkDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veranablockchain_trustregistry_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFrameworkVersionWithDocs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veranablockchain_trustregistry_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustRegistryWithVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_veranablockchain_trustregistry_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_veranablockchain_trustregistry_types_proto_goTypes,
		DependencyIndexes: file_veranablockchain_trustregistry_types_proto_depIdxs,
		MessageInfos:      file_veranablockchain_trustregistry_types_proto_msgTypes,
	}.Build()
	File_veranablockchain_trustregistry_types_proto = out.File
	file_veranablockchain_trustregistry_types_proto_rawDesc = nil
	file_veranablockchain_trustregistry_types_proto_goTypes = nil
	file_veranablockchain_trustregistry_types_proto_depIdxs = nil
}
